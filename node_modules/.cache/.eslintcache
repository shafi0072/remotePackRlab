[{"E:\\Shafi\\remotePackRlab\\src\\index.js":"1","E:\\Shafi\\remotePackRlab\\src\\App.js":"2","E:\\Shafi\\remotePackRlab\\src\\reportWebVitals.js":"3","E:\\Shafi\\remotePackRlab\\src\\Components\\PrivateRoute\\PrivateRoute.js":"4","E:\\Shafi\\remotePackRlab\\src\\Components\\Home\\DeviceDashBoard\\DeviceDashBoard.js":"5","E:\\Shafi\\remotePackRlab\\src\\Components\\Login\\Login.js":"6","E:\\Shafi\\remotePackRlab\\src\\Components\\Home\\UserHome\\UserHome.js":"7","E:\\Shafi\\remotePackRlab\\src\\Components\\Home\\UserHome\\Rechart.js":"8","E:\\Shafi\\remotePackRlab\\src\\Components\\Shared\\Navbar.js":"9","E:\\Shafi\\remotePackRlab\\src\\Components\\Login\\firebase.config.js":"10","E:\\Shafi\\remotePackRlab\\src\\Components\\Home\\Locations\\DeveiceMeter.js":"11","E:\\Shafi\\remotePackRlab\\src\\Components\\Home\\Locations\\Locations.js":"12","E:\\Shafi\\remotePackRlab\\src\\Components\\Home\\Devices\\Devices.js":"13","E:\\Shafi\\remotePackRlab\\src\\Components\\Home\\User\\User.js":"14","E:\\Shafi\\remotePackRlab\\src\\Components\\Home\\Command\\Command.js":"15","E:\\Shafi\\remotePackRlab\\src\\Components\\Home\\User\\UserData.js":"16","E:\\Shafi\\remotePackRlab\\src\\Components\\Home\\Locations\\LocationUser.js":"17","E:\\Shafi\\remotePackRlab\\src\\Components\\Home\\User\\UserForm.js":"18","E:\\Shafi\\remotePackRlab\\src\\Components\\Home\\Locations\\DevicesForm.js":"19","E:\\Shafi\\remotePackRlab\\src\\Components\\Home\\Locations\\DevicesData.js":"20"},{"size":517,"mtime":1624285546831,"results":"21","hashOfConfig":"22"},{"size":1317,"mtime":1625217664894,"results":"23","hashOfConfig":"22"},{"size":375,"mtime":1624285546831,"results":"24","hashOfConfig":"22"},{"size":632,"mtime":1624285546820,"results":"25","hashOfConfig":"22"},{"size":3800,"mtime":1625148471540,"results":"26","hashOfConfig":"22"},{"size":11766,"mtime":1625220462721,"results":"27","hashOfConfig":"22"},{"size":3457,"mtime":1625238746135,"results":"28","hashOfConfig":"22"},{"size":2090,"mtime":1624285546819,"results":"29","hashOfConfig":"22"},{"size":2591,"mtime":1624631918008,"results":"30","hashOfConfig":"22"},{"size":326,"mtime":1624700607508,"results":"31","hashOfConfig":"22"},{"size":8336,"mtime":1625220790270,"results":"32","hashOfConfig":"22"},{"size":5172,"mtime":1625071237156,"results":"33","hashOfConfig":"22"},{"size":4415,"mtime":1625149173741,"results":"34","hashOfConfig":"22"},{"size":1309,"mtime":1625238746089,"results":"35","hashOfConfig":"22"},{"size":2345,"mtime":1624962515729,"results":"36","hashOfConfig":"22"},{"size":765,"mtime":1624534824020,"results":"37","hashOfConfig":"22"},{"size":4508,"mtime":1624962515768,"results":"38","hashOfConfig":"22"},{"size":4999,"mtime":1625238746135,"results":"39","hashOfConfig":"22"},{"size":785,"mtime":1625062179071,"results":"40","hashOfConfig":"22"},{"size":1598,"mtime":1625144612342,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"5la0b5",{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},"E:\\Shafi\\remotePackRlab\\src\\index.js",[],"E:\\Shafi\\remotePackRlab\\src\\App.js",["96"],"import React, { createContext, useState } from 'react';\r\nimport Login from './Components/Login/Login'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport UserHome from './Components/Home/UserHome/UserHome';\r\nimport PrivateRoute from './Components/PrivateRoute/PrivateRoute';\r\nimport DeviceDashBoard from './Components/Home/DeviceDashBoard/DeviceDashBoard';\r\nexport const userContext = createContext()\r\nconst App = () => {\r\n  const [user, setUser] = useState({\r\n    isSignedIn: false,\r\n    name: \"\",\r\n    email: \"\",\r\n    ConfirmPassword: \"\",\r\n    photoURL: \"\",\r\n    error: \"\",\r\n    success: false,\r\n    LoggedInUser: true,\r\n    newUser: false,\r\n    userHome: true,\r\n    user: false,\r\n    devices: false,\r\n    locations: false,\r\n    admin: true,\r\n    viewer:false,\r\n    command:false,\r\n    notClick: true,\r\n    click: false,\r\n    Role:'',\r\n    deviceId:'', \r\n  })\r\n  return (\r\n    <userContext.Provider value={[user, setUser]}>\r\n      <Router>\r\n      <Switch>\r\n        <Route path='/auth' component={Login} />\r\n        \r\n        <PrivateRoute exact path = '/'>\r\n          <UserHome/>\r\n        </PrivateRoute>\r\n        <Route path=\"/:format/:id\" component={DeviceDashBoard}/>\r\n      </Switch>\r\n    </Router>\r\n    </userContext.Provider>\r\n  );\r\n};\r\n\r\nexport default App;","E:\\Shafi\\remotePackRlab\\src\\reportWebVitals.js",[],"E:\\Shafi\\remotePackRlab\\src\\Components\\PrivateRoute\\PrivateRoute.js",["97"],"import React, { useContext } from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { userContext } from '../../App';\r\n\r\nconst PrivateRoute = ({ children, ...rest }) => {\r\n    const [user, setUser] = useContext(userContext);\r\n    return (\r\n        <div>\r\n            <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n      user.email? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/auth\",\r\n              state: { from: location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;","E:\\Shafi\\remotePackRlab\\src\\Components\\Home\\DeviceDashBoard\\DeviceDashBoard.js",["98","99","100","101","102"],"import React, { useEffect, useState } from 'react';\r\nimport Navbar from '../../Shared/Navbar';\r\nimport DeveiceMeter from '../Locations/DeveiceMeter';\r\nimport firebase from 'firebase/app';\r\nimport logo from '../../../Resorces/logo_RLAB.png';\r\nimport './DeviceDashBoard.css';\r\nimport 'firebase/firestore';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    useParams\r\n  } from \"react-router-dom\";\r\n\r\nif (!firebase.apps.length) {\r\n    firebase.initializeApp({\r\n        apiKey: \"AIzaSyA47b6Rx0RioZApSMcyDooUmOpQFFs9WLE\",\r\n        authDomain: \"test1-68872.firebaseapp.com\",\r\n        projectId: \"test1-68872\",\r\n        storageBucket: \"test1-68872.appspot.com\",\r\n        messagingSenderId: \"504703093399\",\r\n        appId: \"1:504703093399:web:50a89636d428ac8bd2f7d2\"\r\n    });\r\n }else {\r\n    firebase.app(); // if already initialized, use that one\r\n }\r\n\r\nconst db = firebase.firestore();\r\n\r\n\r\nconst DeviceDashBoard = () => {\r\n    let { format, id } = useParams();\r\n\r\n\r\n    const [status,setStatus] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    function arrayFunc(arr,key) {\r\n        let resultArray = [];\r\n        for(let i = 0; i < arr.length; i++){\r\n            if(arr[i].DeviceID === key){\r\n                resultArray = arr[i];\r\n            }\r\n        }\r\n        return resultArray\r\n    };\r\n    \r\n    useEffect(() => {\r\n        if(format === \"ENER01\"){\r\n            const userDb =  db.collection(\"ENER000001\").onSnapshot((querySnapshot) => {\r\n                const getDataFirebase = [];\r\n                querySnapshot.forEach((doc) => {\r\n                  getDataFirebase.push({...doc.data(), key:doc.id});\r\n                });\r\n                \r\n                if(getDataFirebase.length > 0){\r\n                    const functionalArray = arrayFunc(getDataFirebase, id)\r\n                    setStatus(functionalArray)\r\n                    setLoading(false)\r\n                }\r\n            });\r\n            return userDb\r\n        }\r\n        else if(format === \"RTD01\"){\r\n            const userDb =  db.collection(\"RTD0000001\").onSnapshot((querySnapshot) => {\r\n                const getDataFirebase = [];\r\n                querySnapshot.forEach((doc) => {\r\n                  getDataFirebase.push({...doc.data(), key:doc.id});\r\n                });\r\n                \r\n                if(getDataFirebase.length > 0){\r\n                    const functionalArray = arrayFunc(getDataFirebase, id)\r\n                    setStatus(functionalArray)\r\n                    setLoading(false)\r\n                }\r\n            });\r\n            return userDb\r\n        }\r\n        else if(format === \"GTY01\"){\r\n            const userDb =  db.collection(\"GTY0000001\").onSnapshot((querySnapshot) => {\r\n                const getDataFirebase = [];\r\n                querySnapshot.forEach((doc) => {\r\n                  getDataFirebase.push({...doc.data(), key:doc.id});\r\n                });\r\n                \r\n                if(getDataFirebase.length > 0){\r\n                    const functionalArray = arrayFunc(getDataFirebase, id)\r\n                    setStatus(functionalArray)\r\n                    setLoading(false)\r\n                }\r\n            });\r\n            return userDb\r\n        }\r\n        \r\n        \r\n     \r\n    }, [loading]);\r\n  \r\n    return (\r\n        <div className='row'>\r\n            <div className=\"col-md-3 dashboard-navbar\" style={{margin:'0', padding:'0'}}>\r\n                <Navbar/>\r\n            </div>\r\n            <div className=\"col-md-9 dashboard-background text-center\">\r\n            <img src={logo} alt=\"\" style={{width:'20%'}} className='mt-5' />\r\n                <h1 className='text-light mt-2'>Format: {format}</h1>\r\n                <DeveiceMeter data={status}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DeviceDashBoard;","E:\\Shafi\\remotePackRlab\\src\\Components\\Login\\Login.js",["103","104","105"],"import React, { useContext, useState } from 'react';\r\n\r\nimport './Login.css';\r\nimport '../../responsive.css';\r\nimport logo from '../../Resorces/logo_RLAB.png'\r\nimport { userContext } from '../../App';\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport firebaseConfig from './firebase.config';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport { useEffect } from 'react';\r\nimport 'firebase/firestore';\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nif (!firebase.apps.length) {\r\n    firebase.initializeApp({\r\n        apiKey: \"AIzaSyA47b6Rx0RioZApSMcyDooUmOpQFFs9WLE\",\r\n        authDomain: \"test1-68872.firebaseapp.com\",\r\n        projectId: \"test1-68872\",\r\n        storageBucket: \"test1-68872.appspot.com\",\r\n        messagingSenderId: \"504703093399\",\r\n        appId: \"1:504703093399:web:50a89636d428ac8bd2f7d2\"\r\n    });\r\n }else {\r\n    firebase.app(); // if already initialized, use that one\r\n }\r\n\r\nconst db = firebase.firestore();\r\n\r\nconst Login = () => {\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n\r\n    \r\n\r\n    const { from } = location.state || { from: { pathname: \"/\" } };\r\n\r\n    const [click, setClick] = useState({\r\n        login: true,\r\n        signUp: false\r\n    });\r\n    const [userData, setUserData] = useState([]);\r\n    const [loading, setLoading] = useState(true)\r\n    const handleSignUp = () => {\r\n        const newClick = {...click}\r\n        newClick.login = false;\r\n        newClick.signUp  = true;\r\n        setClick(newClick)\r\n    }\r\n    \r\n    const handleLogin = () => {\r\n        const newClick = {...click}\r\n        newClick.login = true;\r\n        newClick.signUp  = false;\r\n        setClick(newClick)\r\n    };\r\n    const [user, setUser] = useContext(userContext);\r\n    const handleOnChange = (e) => {\r\n        const newUserInfo = {...user}\r\n        newUserInfo[e.target.name] = e.target.value;\r\n        setUser(newUserInfo);\r\n        \r\n    }\r\n    const handleCreateAccount = (e) => {\r\n        firebase.auth().createUserWithEmailAndPassword(user.email, user.ConfirmPassword)\r\n        .then(res => {\r\n            const newUserInfo = {...user};\r\n            newUserInfo.error = \"\";\r\n            newUserInfo.success = true;\r\n            setUser(newUserInfo);\r\n            updateUserInfo(user.name)\r\n        }\r\n        )\r\n        .catch(error => {\r\n            const newUserInfo = {\r\n                ...user\r\n            };\r\n            newUserInfo.error = error.message;\r\n            newUserInfo.success = false;\r\n            setUser(newUserInfo)\r\n\r\n        });\r\n        e.preventDefault()\r\n    }\r\n   const handleSubmitLogin = (e) => {\r\n    firebase.auth().signInWithEmailAndPassword(user.email, user.ConfirmPassword)\r\n    .then(res => {\r\n\r\n        const newUserInfo = {\r\n            ...user\r\n        };\r\n        newUserInfo.email = res.user.email;\r\n        newUserInfo.error = \"\";\r\n        newUserInfo.success = true;\r\n        setUser(newUserInfo);\r\n        history.replace(from);\r\n    \r\n    if(res.user.email === 'safi29317@gmail.com'){\r\n        const newUser = {...user}\r\n        newUser.admin = true;\r\n        newUser.viewer = false;\r\n        setUser(newUser);\r\n    }else if(userData.Role === 'admin'){\r\n        const newUser = {...user}\r\n        newUser.admin = true;\r\n        newUser.viewer = false;\r\n        setUser(newUser);\r\n    }\r\n    else if(userData.Role === 'oparetors'){\r\n        const newUser = {...user}\r\n        newUser.admin = true;\r\n        newUser.viewer = false;\r\n        setUser(newUser);\r\n    }\r\n    else{\r\n        const newUser = {...user}\r\n        newUser.admin = false;\r\n        newUser.viewer = true;\r\n        setUser(newUser);\r\n    }\r\n    \r\n        \r\n    })\r\n    .catch(function (error) {\r\n        const newUserInfo = {\r\n            ...user\r\n        };\r\n        newUserInfo.error = error.message;\r\n        newUserInfo.success = false;\r\n        setUser(newUserInfo);\r\n        console.log(error);\r\n    })\r\n    \r\n    \r\n    e.preventDefault()\r\n   }\r\n   const updateUserInfo = name => {\r\n    const user = firebase.auth().currentUser;\r\n\r\n    user.updateProfile({\r\n    displayName: name,\r\n    }).then(function() {\r\n    console.log(\"User name Updated SuccessFully\")\r\n    }).catch(function(error) {\r\n     console.log(error)\r\n    });\r\n}\r\nfunction arrayFunc(arr,key) {\r\n    let resultArray = [];\r\n    for(let i = 0; i < arr.length; i++){\r\n        if(arr[i].email === key){\r\n            resultArray = arr[i];\r\n        }\r\n        \r\n    }\r\n   \r\n    return resultArray\r\n};\r\nuseEffect(() => {\r\n    const userDb =  db.collection(\"user\").onSnapshot((querySnapshot) => {\r\n        const getDataFirebase = [];\r\n        querySnapshot.forEach((doc) => {\r\n          getDataFirebase.push({...doc.data(), key:doc.id});\r\n        });\r\n        \r\n        if(getDataFirebase.length > 0){\r\n            const functionalArray = arrayFunc(getDataFirebase, user.email)\r\n            setUserData(functionalArray);\r\n            console.log('firestore',getDataFirebase)\r\n            setLoading(false)\r\n           \r\n        }\r\n    });\r\n    return userDb;\r\n}, [user]);\r\n\r\n\r\nconsole.log('stateStore',userData);\r\n    return (\r\n        <div className='background d-flex justify-content-center p-5'>\r\n\r\n            {click.login && <div className=\"loginBox\">\r\n                <div className=\"text-center\">\r\n                    <img\r\n                        src={logo}\r\n                        alt=\"\"\r\n                        style={{\r\n                            width: '30%'\r\n                        }}/>\r\n                </div>\r\n                <div className=\"loginText mt-5 text-center\">\r\n                    <h2\r\n                        style={{\r\n                            fontFamily: \"'Raleway', sans-serif\"\r\n                        }}>Log In</h2>\r\n                </div>\r\n                <p className=\"text-danger\">{user.error}</p>\r\n                {user.success && <p className='text-success'>Log in successfull</p>}\r\n                <form action=\"\" onSubmit={handleSubmitLogin}>\r\n                <div className=\"\">\r\n                    <div class=\"mb-3 row\">\r\n\r\n                        <div class=\"col-sm-10 input-box\">\r\n                            <input\r\n                                onChange={handleOnChange}\r\n                                type=\"text\"\r\n                                class=\"form-control\"\r\n                                id=\"staticEmail\"\r\n                                name=\"email\"\r\n                                placeholder=\"User email\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"mb-3 row\">\r\n                        <div class=\"col-sm-10 input-box\">\r\n                            <input\r\n                                type=\"password\"\r\n                                onChange={handleOnChange}\r\n                                class=\"form-control\"\r\n                                id=\"inputPassword\"\r\n                                name=\"ConfirmPassword\"\r\n                                placeholder=\"Password\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"remember\">\r\n                    <input className=\"rememberCheckbox\" type=\"checkbox\"/>\r\n                    <label htmlFor=\"\">Remember Me</label>\r\n                </div>\r\n                <div className=\"forgotPass\">\r\n                    <a href=\"#\" className=\"forgotTxt\">Forgot Password</a>\r\n                </div>\r\n                <div>\r\n                    <button className=\"form-control bg-primary text-light\" type='submit'>Log In</button>\r\n                </div>\r\n                <div className=\"creatTxt\">\r\n                    <p>Don't have an account?<span onClick={handleSignUp} className=\"creatAccount\">Create an account</span>\r\n                    </p>\r\n                </div>\r\n                \r\n                </form>\r\n            </div>}\r\n\r\n            {click.signUp && <div className=\"loginBox signup\">\r\n                <div className=\"text-center\">\r\n                    <img\r\n                        src={logo}\r\n                        alt=\"\"\r\n                        style={{\r\n                            width: '30%'\r\n                        }}/>\r\n                </div>\r\n                <div className=\"loginText mt-5 text-center\">\r\n                    <h2\r\n                        style={{\r\n                            fontFamily: \"'Raleway', sans-serif\"\r\n                        }}>Sign Up</h2>\r\n                </div>\r\n                <p className='text-danger'>{user.error}</p>\r\n                {user.success && <p className='text-success'>SignUp SuccessFull</p>}\r\n                <form action=\"\" onSubmit={handleCreateAccount}>\r\n                <div className=\"\">\r\n                    <div class=\"mb-3 row\">\r\n\r\n                        <div class=\"col-sm-10 input-box\">\r\n                            <input\r\n                                onChange={handleOnChange}\r\n                                type=\"text\"\r\n                                class=\"form-control\"\r\n                                id=\"staticEmail\"\r\n                                placeholder=\"First Name\"\r\n                                name=\"name\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"mb-3 row\">\r\n\r\n                        <div class=\"col-sm-10 input-box\">\r\n                            <input\r\n                            onChange={handleOnChange}\r\n                                type=\"text\"\r\n                                class=\"form-control\"\r\n                                id=\"staticEmail\"\r\n                                placeholder=\"Last Name\"\r\n                                name=\"name\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"mb-3 row\">\r\n\r\n                        <div class=\"col-sm-10 input-box\">\r\n                            <input\r\n                            onChange={handleOnChange}\r\n                                type=\"email\"\r\n                                class=\"form-control\"\r\n                                id=\"staticEmail\"\r\n                                placeholder=\"Email\"\r\n                                name=\"email\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"mb-3 row\">\r\n                        <div class=\"col-sm-10 input-box\">\r\n                            <input\r\n                            onChange={handleOnChange}\r\n                                type=\"password\"\r\n                                class=\"form-control\"\r\n                                id=\"inputPassword\"\r\n                                name=\"ConfirmPassword\"\r\n                                placeholder=\"Password\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"mb-3 row\">\r\n                        <div class=\"col-sm-10 input-box\">\r\n                            <input\r\n                            onChange={handleOnChange}\r\n                                type=\"password\"\r\n                                class=\"form-control\"\r\n                                id=\"inputPassword\"\r\n                                name=\"ConfirmPassword\"\r\n                                placeholder=\"Confirm Password\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div>\r\n                    <button className=\"form-control bg-primary text-light\" type='submit'>Create</button>\r\n                </div>\r\n                <div className=\"creatTxt\">\r\n                    <p>Already have an account?<span onClick={handleLogin} className=\"creatAccount\">Log In</span>\r\n                    </p>\r\n                </div>\r\n                \r\n                </form>\r\n            </div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;","E:\\Shafi\\remotePackRlab\\src\\Components\\Home\\UserHome\\UserHome.js",["106","107","108"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport Navbar from '../../Shared/Navbar';\r\nimport './UserHome.css'\r\nimport User from '../User/User'\r\nimport logo from '../../../Resorces/logo_RLAB.png';\r\nimport { userContext } from '../../../App';\r\nimport Rechart from './Rechart';\r\nimport Devices from '../Devices/Devices';\r\nimport Location from '../Locations/Locations';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport Command from '../Command/Command';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nif (!firebase.apps.length) {\r\n    firebase.initializeApp({\r\n        apiKey: \"AIzaSyA47b6Rx0RioZApSMcyDooUmOpQFFs9WLE\",\r\n        authDomain: \"test1-68872.firebaseapp.com\",\r\n        projectId: \"test1-68872\",\r\n        storageBucket: \"test1-68872.appspot.com\",\r\n        messagingSenderId: \"504703093399\",\r\n        appId: \"1:504703093399:web:50a89636d428ac8bd2f7d2\"\r\n    });\r\n }else {\r\n    firebase.app(); // if already initialized, use that one\r\n }\r\n\r\nconst db = firebase.firestore();\r\n\r\nconst UserHome = () => {\r\n   \r\n    const [user, setUser] = useContext(userContext);\r\n    \r\n    const [dbUserData, setDbUserData] = useState();\r\n    const [loading, setLoading] = useState(true)\r\n    const [menu, setMenu] = useState({\r\n        showMenu:true,\r\n        hideMenu:false,\r\n        suspendMenu: false,\r\n    })\r\n    useEffect(() => {\r\n        const getDataFirebase = [];\r\n        const userDb = db.collection(\"user\").onSnapshot((querySnapshot) => {\r\n            querySnapshot.forEach((doc) => {\r\n              getDataFirebase.push({...doc.data(), key:doc.id});\r\n            });\r\n            setDbUserData(getDataFirebase);\r\n            setLoading(false)\r\n        });\r\n        \r\n       return userDb;\r\n    }, []);\r\n   \r\n    useEffect(() => {\r\n        if(window.outerWidth <= 500){\r\n            const newMenu = {...menu};\r\n            newMenu.showMenu = false;\r\n            newMenu.hideMenu = true;\r\n            setMenu(newMenu);\r\n        }\r\n    }, [dbUserData]);\r\n    const handleMenuClick = (e) => {\r\n        const newMenu = {...menu};\r\n            newMenu.showMenu = true;\r\n            newMenu.hideMenu = false;\r\n            newMenu.suspendMenu = true;\r\n            setMenu(newMenu);\r\n    }\r\n    const handleSubMenuClose = () => {\r\n        const newMenu = {...menu};\r\n            newMenu.showMenu = false;\r\n            newMenu.hideMenu = true;\r\n            newMenu.suspendMenu = false;\r\n            setMenu(newMenu);\r\n    }\r\n    return (\r\n        <div className='row'>\r\n            \r\n            <div className=\"col-md-3 bg-dark\" style={{margin:'0', padding:'0'}}>\r\n            {menu.suspendMenu && <MenuIcon onClick = {handleSubMenuClose} className=\"text-light\" style={{fontSize:'50px'}}/>}\r\n                {menu.showMenu && <Navbar/>}\r\n                {menu.hideMenu && <MenuIcon onClick = {handleMenuClick} className=\"text-light\" style={{fontSize:'50px'}}/>}\r\n                \r\n            </div>\r\n            <div className=\"col-md-9 backgroundSIDE text-center\">\r\n            \r\n            <img src={logo} alt=\"\" style={{width:'20%'}} className='mt-5' />\r\n\r\n                {user.userHome && <Rechart/>}\r\n                {user.user&& user.admin && <User data={dbUserData}/> }\r\n                \r\n                {user.devices && <Devices/>}\r\n                {user.locations && <Location/>}\r\n                {user.command && <Command/>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserHome;","E:\\Shafi\\remotePackRlab\\src\\Components\\Home\\UserHome\\Rechart.js",["109","110"],"import React, { PureComponent } from 'react';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\r\n\r\nconst data = [\r\n  {\r\n    name: 'Page A',\r\n    uv: 4000,\r\n    pv: 2400,\r\n    amt: 2400,\r\n  },\r\n  {\r\n    name: 'Page B',\r\n    uv: 3000,\r\n    pv: 1398,\r\n    amt: 2210,\r\n  },\r\n  {\r\n    name: 'Page C',\r\n    uv: 2000,\r\n    pv: 9800,\r\n    amt: 2290,\r\n  },\r\n  {\r\n    name: 'Page D',\r\n    uv: 2780,\r\n    pv: 3908,\r\n    amt: 2000,\r\n  },\r\n  {\r\n    name: 'Page E',\r\n    uv: 1890,\r\n    pv: 4800,\r\n    amt: 2181,\r\n  },\r\n  {\r\n    name: 'Page F',\r\n    uv: 2390,\r\n    pv: 3800,\r\n    amt: 2500,\r\n  },\r\n  {\r\n    name: 'Page G',\r\n    uv: 3490,\r\n    pv: 4300,\r\n    amt: 2100,\r\n  },\r\n];\r\n\r\n\r\nconst Rechart = () => {\r\n    return (\r\n        <div className='mt-5'>\r\n        <LineChart width={900} height={160} data={data} >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" interval=\"preserveEnd\" />\r\n          <YAxis interval=\"preserveEnd\" />\r\n          <Legend />\r\n          <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\r\n          <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" />\r\n        </LineChart>\r\n\r\n        <LineChart width={900} height={160} data={data}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" interval=\"preserveStart\" />\r\n          <YAxis interval=\"preserveStart\" />\r\n          <Legend />\r\n          <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\r\n          <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" />\r\n        </LineChart>\r\n\r\n        <LineChart width={900} height={160} data={data}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" interval=\"preserveStartEnd\" />\r\n          <YAxis interval=\"preserveStartEnd\" />\r\n          <Legend />\r\n          <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\r\n          <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" />\r\n        </LineChart>\r\n\r\n        \r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Rechart;","E:\\Shafi\\remotePackRlab\\src\\Components\\Shared\\Navbar.js",[],"E:\\Shafi\\remotePackRlab\\src\\Components\\Login\\firebase.config.js",[],"E:\\Shafi\\remotePackRlab\\src\\Components\\Home\\Locations\\DeveiceMeter.js",["111","112"],"import React from 'react';\r\nimport './DeviceMeter.css';\r\nimport '../../../responsive.css';\r\n\r\nimport {\r\n    LineChart,\r\n    Line,\r\n    XAxis,\r\n    YAxis,\r\n    CartesianGrid,\r\n   \r\n} from 'recharts';\r\nimport { useState } from 'react';\r\n\r\n\r\n\r\nconst DeveiceMeter = (props) => {\r\n     const{voltege01, voltage02, voltage03, voltage04, voltage05,vBat, txPower, rssiGateway, nMedicion, msActivo, longitude,latitude, current01, rassiGateWay, resistance, temperature, nMessages} = props.data;\r\n\r\n     const data = [\r\n        {\r\n            name: 'Voltage1',\r\n            uv: voltege01,\r\n            pv: voltege01,\r\n            amt: voltege01\r\n        }, {\r\n            name: 'Voltage2',\r\n            uv: voltage02,\r\n            pv: voltage02,\r\n            amt: voltage02\r\n        }, {\r\n            name: 'Voltage3',\r\n            uv: voltage03,\r\n            pv: voltage03,\r\n            amt: voltage03\r\n        }, {\r\n            name: 'Voltage4',\r\n            uv: voltage04,\r\n            pv: voltage04,\r\n            amt: voltage04\r\n        },\r\n        {\r\n            name: 'Voltage4',\r\n            uv: voltage05,\r\n            pv: voltage05,\r\n            amt: voltage05\r\n        }\r\n    ];\r\n    const [params, setParams] = useState({\r\n        voltage01: false\r\n    });\r\n    \r\n    return (\r\n        <div className=\"container\">\r\n            <h1 className=\"meter-text\">Meter</h1>\r\n            <div className=\"device-meter-container\">\r\n            {voltege01 >= 0 && <div>\r\n                <div className=\"row thead\">\r\n                    <div className=\"col-md-4 meter-col\">\r\n                        <p>Date</p>\r\n                    </div>\r\n                    <div className=\"col-md-1 meter-col\">\r\n                        <p>Vcc 1</p>\r\n                    </div>\r\n                    <div className=\"col-md-1 meter-col\">\r\n                        <p>Vcc 2</p>\r\n                    </div>\r\n                    <div className=\"col-md-1 meter-col\">\r\n                        <p>Vcc 3</p>\r\n                    </div>\r\n                    <div className=\"col-md-1 meter-col\">\r\n                        <p>Vcc 4</p>\r\n                    </div>\r\n                    <div className=\"col-md-1 meter-col\">\r\n                        <p>Vcc 5</p>\r\n                    </div>\r\n                    <div className=\"col-md-3 meter-col\">\r\n                        <p>Current 1</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row tbody\">\r\n                    <div className=\"col-md-4 meter-data\" data-content=\"Date\">\r\n                        <p>12/12/21 08:06:15</p>\r\n                    </div>\r\n                    <div className=\"col-md-1 meter-data\" data-content=\"Vcc 1\">\r\n                        <p>{voltege01}V</p>\r\n                    </div>\r\n                    <div className=\"col-md-1 meter-data\" data-content=\"Vcc 2\">\r\n                        <p>{voltage02}V</p>\r\n                    </div>\r\n                    <div className=\"col-md-1 meter-data\" data-content=\"Vcc 3\">\r\n                        <p>{voltage03}V</p>\r\n                    </div>\r\n                    <div className=\"col-md-1 meter-data\" data-content=\"Vcc 3\">\r\n                        <p>{voltage04}V</p>\r\n                    </div>\r\n                    <div className=\"col-md-1 meter-data\" data-content=\"Vcc 3\">\r\n                        <p>{voltage05}V</p>\r\n                    </div>\r\n                    <div className=\"col-md-3 meter-data\" data-content=\"Current 1\">\r\n                        <p>{current01}A</p>\r\n                    </div>\r\n                </div>\r\n            </div>}\r\n            <div>\r\n                <div className=\"row my-2 status-container\">\r\n                    <div className=\"col-xl-3 col-md-2 text-start p-0 status-data-container\">\r\n                        <span className=\"status-title\">Status:</span>\r\n                        <span>Ok</span>\r\n                    </div>\r\n                    <div className=\"col-xl-6 col-md-8 p-0 status-mid-data\">\r\n                        <span className=\"status-title\">Last connection:</span>\r\n                        <span className=\"status-data-date\">12/12/21</span>\r\n                        <span>06:04:25</span>\r\n                    </div>\r\n                    <div className=\"col-xl-3 col-md-2 text-end p-0 status-data-container\">\r\n                        <span className=\"status-title\">Vbat:</span>\r\n                        <span>{vBat}V</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n            {voltege01 >= 0 && <div className=\"chart-container\">\r\n                    <LineChart width={800} height={150} className=\"charts\" data={data}>\r\n                        <XAxis dataKey=\"name\"/>\r\n                        <YAxis/>\r\n                        <CartesianGrid stroke=\"#eee\" strokeDasharray=\"5 5\"/>\r\n                        <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" />\r\n                        <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#82ca9d\" />\r\n                    </LineChart> \r\n            </div>}\r\n            <div className=\"device-meter-scroll\">\r\n                <div>\r\n                    <div>\r\n                        <p className=\"row title-control\">Control</p>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl-3 col-lg-3\">\r\n                                <p className=\"control-input-text\">Period :</p>\r\n                            </div>\r\n                            <div className=\"col-xl-5 col-lg-5 control-input-box\"><input className=\"control-input-number\" type=\"number\" value={latitude}/></div>\r\n                            <div className=\"col-xl-4 col-lg-4\"></div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl-3 col-lg-3\">\r\n                                <p className=\"control-input-text\">Freq :</p>\r\n                            </div>\r\n                            <div className=\"col-xl-5 col-lg-5 control-input-box\"><input className=\"control-input-number\" type=\"number\" value={longitude}/></div>\r\n                            <div className=\"col-xl-4 col-lg-4\"></div>\r\n                        </div>\r\n                        <div className=\"meter-button d-flex justify-content-end\">\r\n                            <div className=\"btn btn-primary button1\"><span>INT CYCLE</span></div>\r\n                            <div className=\"btn btn-primary button2\"><span>ON / OFF</span></div>\r\n                        </div> \r\n                        \r\n                    </div>\r\n                    <ul className=\"row device-meter-list-container\">\r\n                        {txPower >= 0 && <li className=\" text-start text-light device-list\"><h5 className=\"device-meter-list\" htmlFor=\"\">txPower :</h5> {txPower}</li>}\r\n                        {rssiGateway >= 0 && <li className=\" text-start text-light device-list\"><h5 className=\"device-meter-list\" htmlFor=\"\">rssiGateway :</h5> {rssiGateway}</li>}\r\n                        {nMedicion >= 0 && <li className=\" text-start text-light device-list\"><h5 className=\"device-meter-list\" htmlFor=\"\">nMedicion :</h5> {nMedicion}</li>}\r\n                       {msActivo >= 0 && <li className=\"text-start text-light device-list\"><h5 className=\"device-meter-list\" htmlFor=\"\">msActivo :</h5> {msActivo}</li>}\r\n                    </ul>\r\n                    <ul className=\"row d-flex justify-content-lg-around text-light device-meter-list-container\">\r\n                        {rassiGateWay >= 0 && <li className=\" text-start text-light device-list\"><h5 className=\"device-meter-list\" htmlFor=\"\">rassiGateWay :</h5> {rassiGateWay}</li>}\r\n                        {resistance >= 0 && <li className=\" text-start text-light device-list\"><h5 className=\"device-meter-list\" htmlFor=\"\">resistance :</h5> {resistance}</li>}\r\n                        {temperature >= 0 && <li className=\" text-start text-light device-list\"><h5 className=\"device-meter-list\" htmlFor=\"\">temperature :</h5> {temperature}</li>}\r\n                        {nMessages >= 0 && <li className=\" text-start text-light device-list\"><h5 className=\"device-meter-list\" htmlFor=\"\">nMessages :</h5> {nMessages}</li>}\r\n                    </ul>\r\n                </div>\r\n            \r\n            </div>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DeveiceMeter;","E:\\Shafi\\remotePackRlab\\src\\Components\\Home\\Locations\\Locations.js",["113"],"import React, { useContext, useState } from 'react';\r\nimport { userContext } from '../../../App';\r\nimport LocationUser from './LocationUser';\r\n\r\nimport './Location.css';\r\nimport '../../../responsive.css'\r\n\r\nimport firebase from 'firebase';\r\nimport 'firebase/firestore';\r\n\r\n\r\nif (!firebase.apps.length) {\r\n    firebase.initializeApp({\r\n        apiKey: \"AIzaSyA47b6Rx0RioZApSMcyDooUmOpQFFs9WLE\",\r\n        authDomain: \"test1-68872.firebaseapp.com\",\r\n        projectId: \"test1-68872\",\r\n        storageBucket: \"test1-68872.appspot.com\",\r\n        messagingSenderId: \"504703093399\",\r\n        appId: \"1:504703093399:web:50a89636d428ac8bd2f7d2\"\r\n    });\r\n }else {\r\n    firebase.app(); // if already initialized, use that one\r\n }\r\n\r\nconst db = firebase.firestore();\r\n\r\n\r\n\r\nconst Locations = () => {\r\n    const [user, setUser] = useContext(userContext);\r\n\r\n    const [locationData, setLocationData] = useState({\r\n        LocationID:'',\r\n        addDevices:'',\r\n        Device_id_1:'',\r\n        Device_id_2:'',\r\n        Device_id_3:'',\r\n    });\r\n    const [addDevices, setAddDevices] = useState({\r\n        click: false,\r\n    });\r\n\r\n    const handleClick = (e) => {\r\n        const newClick = {...addDevices};\r\n        newClick.click = true;\r\n        setAddDevices(newClick);\r\n        e.preventDefault()\r\n    }\r\n    const handleSubmit = (e) => {\r\n        db.collection(\"location\").add(locationData)\r\n        .then((docRef) => {\r\n            \r\n        })\r\n        .catch((error) => {\r\n            console.error(\"Error adding document: \", error);\r\n        });\r\n        e.preventDefault();\r\n    };\r\n    const handleChange =(e) => {\r\n        const newLocationData = {...locationData};\r\n        newLocationData[e.target.name] = e.target.value;\r\n        setLocationData(newLocationData)\r\n    }; \r\n    \r\n    return (\r\n        <div className=\"container\">\r\n           {user.admin && <div className=\"row d-flex justify-content-end align-items-center mt-5\">\r\n           <form action=\"\" onSubmit={handleSubmit}>\r\n                <div className=\"title-name mb-3 d-flex justify-content-end\">\r\n                    <label className=\"text-light location-title-text\" htmlFor=\"locationId\" style={{marginRight:'60px'}} >Location ID</label>\r\n                    <input className=\"location-title-input\" type=\"text\" id='locationId' placeholder='PlantaLiners' name=\"LocationID\" onChange={handleChange}/>\r\n                </div>\r\n                <div className=\"title-name mb-3 d-flex justify-content-end\">\r\n                    <label className=\"text-light location-title-text\" htmlFor=\"DeviceName\" style={{marginRight:'56px'}}>Add Device</label>\r\n                    <input className=\"location-title-input\" type=\"text\" id='DeviceName' placeholder='Device Name' name=\"addDevices\" onChange={handleChange}/>\r\n                </div>\r\n                <div className=\"d-flex justify-content-end location-button-div\">\r\n                    <button className=\"btn btn-primary mb-3 location-button\" style={{marginLeft:'61.6%'}} onClick={handleClick}>Add New Device</button>\r\n                </div>\r\n                \r\n                 \r\n                {addDevices.click && <div>\r\n                <div className=\"title-name mb-3 d-flex justify-content-end\">\r\n                    <label className=\"text-light location-title-text\" htmlFor=\"modelOfDevice\" style={{marginRight:'60px'}}>Device_id_1</label>\r\n                    <input className=\"location-title-input\" type=\"text\" id='modeOfDevice' placeholder='Meter_ABC' name=\"Device_id_1\" onChange={handleChange}/>\r\n                </div>\r\n                <div className=\"title-name mb-3 d-flex justify-content-end\">\r\n                    <label className=\"text-light location-title-text\" htmlFor=\"modelOfDevice\" style={{marginRight:'60px'}}>Device_id_2</label>\r\n                    <input className=\"location-title-input\" type=\"text\" id='modeOfDevice' placeholder='Meter_ABC' name=\"Device_id_2\" onChange={handleChange}/>\r\n                </div>\r\n                <div className=\"title-name mb-3 d-flex justify-content-end\">\r\n                    <label className=\"text-light location-title-text\" htmlFor=\"modelOfDevice\" style={{marginRight:'60px'}}>Device_id_3</label>\r\n                    <input className=\"location-title-input\" type=\"text\" id='modeOfDevice' placeholder='Meter_ABC' name=\"Device_id_3\" onChange={handleChange}/>\r\n                </div>\r\n                </div>}\r\n            \r\n                <div className=\"title-name mb-3 d-flex justify-content-end\">\r\n                    <label className=\"text-light file-text location-title-text\" htmlFor=\"image\">Image</label>\r\n                    <input className=\"location-title-input\" type=\"file\" id='image' placeholder='30.5'/>\r\n                </div>\r\n                <div className=\"d-flex justify-content-end location-button-div\">\r\n                    <button className=\"btn btn-primary location-button\" style={{marginLeft:'65%'}} type=\"submit\">Create/Save</button>\r\n                </div>\r\n                \r\n            </form>\r\n           </div>}\r\n            <div className=\"row mt-5 ms-5\">\r\n            {user.viewer &&<LocationUser/>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Locations;","E:\\Shafi\\remotePackRlab\\src\\Components\\Home\\Devices\\Devices.js",["114"],"import React, { useState } from 'react';\r\nimport firebase from 'firebase';\r\nimport 'firebase/firestore';\r\nimport './Devices.css';\r\nimport '../../../responsive.css';\r\nimport { useEffect } from 'react';\r\n\r\n\r\nif (!firebase.apps.length) {\r\n    firebase.initializeApp({\r\n        apiKey: \"AIzaSyA47b6Rx0RioZApSMcyDooUmOpQFFs9WLE\",\r\n  authDomain: \"test1-68872.firebaseapp.com\",\r\n  projectId: \"test1-68872\",\r\n  storageBucket: \"test1-68872.appspot.com\",\r\n  messagingSenderId: \"504703093399\",\r\n  appId: \"1:504703093399:web:50a89636d428ac8bd2f7d2\"\r\n    });\r\n }else {\r\n    firebase.app(); // if already initialized, use that one\r\n }\r\n\r\nconst db = firebase.firestore();\r\n\r\nconst Devices = () => {\r\n    const [devicesData, setDevicesData] = useState({\r\n        model:'',\r\n        SerialNumber:'',\r\n        Commission:'',\r\n        alarm1:'',\r\n        alarm2:'',\r\n        format:''\r\n    });\r\n    const handleOnChangeSelect = (event) => {\r\n        setDevicesData({format: event.target.value})\r\n    }\r\n    const handleChange = (event) => {\r\n        const newDevices = {...devicesData};\r\n        newDevices[event.target.name] = event.target.value;\r\n        setDevicesData(newDevices);\r\n        \r\n    }\r\n    const handleSubmit = (e) => {\r\n        db.collection(\"Devices\").add(devicesData)\r\n        .then((docRef) => {\r\n           \r\n        })\r\n        .catch((error) => {\r\n            \r\n        });\r\n\r\n        e.preventDefault()\r\n        \r\n    }\r\n    console.log(devicesData);\r\n    \r\n    return (\r\n        <div className=\"d-flex justify-content-center align-items-center mt-5 device-main-container\">\r\n            <form action=\"\" onSubmit={handleSubmit} className=\"device-container\">\r\n            <div className='d-flex mb-3 device-div-container' >\r\n                    <label htmlFor=\"format\" className='text-light interface-name device-title' style={{marginRight:'97px'}}>Formate</label>\r\n                    <select id=\"format\" className='form-control device-selector device-input' onChange={handleOnChangeSelect}>\r\n                        <option value=\"ENER01\" >ENER01</option>\r\n                        <option value=\"RTD01\">RTD01</option>\r\n                        <option value=\"GTY01\">GTY01</option>\r\n                    </select>\r\n            </div>\r\n                <div className=\"d-flex mb-3 device-div-container\">\r\n                    <label className=\"text-light device-title\" htmlFor=\"modelOfDevice\" style={{marginRight:'60px'}}>Device Model</label>\r\n                    <input className=\"device-input\" type=\"text\" id='modeOfDevice' placeholder='Meter_ABC' name=\"model\" onChange={handleChange}/>\r\n                </div>\r\n                <div className=\"d-flex mb-3 device-div-container\">\r\n                    <label className=\"text-light device-title\" htmlFor=\"serialNumber\" style={{marginRight:'56px'}}>Serial Number</label>\r\n                    <input className=\"device-input\" type=\"text\" id='serialNumber' placeholder='ABC012319' name=\"SerialNumber\" onChange={handleChange}/>\r\n                </div>\r\n                <div className=\"d-flex mb-3 device-div-container\">\r\n                    <label className=\"text-light device-title\" htmlFor=\"commissioningDate\" style={{marginRight:'10px'}}>Commissioning Date</label>\r\n                    <input className=\"device-input\" type=\"text\" id='commissioningDate' placeholder='1699992929202' name=\"Commission\" onChange={handleChange}/>\r\n                </div>\r\n                <div className=\"d-flex mb-3 device-div-container\">\r\n                    <label className=\"text-light device-title\" htmlFor=\"Var01\" style={{marginRight:'27px'}}>Level_Alarm_var01</label>\r\n                    <input className=\"device-input\" type=\"text\" id='Var01' placeholder='30.5' name=\"alarm1\" onChange={handleChange}/>\r\n                </div>\r\n                <div className=\"d-flex mb-3 device-div-container\">\r\n                    <label className=\"text-light device-title\" htmlFor=\"Var02\" style={{marginRight:'27px'}}>Level_Alarm_var02</label>\r\n                    <input className=\"device-input\" type=\"text\" id='Var02' placeholder='30.5' name='alarm2' onChange={handleChange}/>\r\n                </div>\r\n                <div className=\"device-button-container\">\r\n                    <button className=\"btn btn-primary device-button\" style={{marginLeft:'65%'}}>Create/Save</button>\r\n                </div>\r\n                \r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Devices;","E:\\Shafi\\remotePackRlab\\src\\Components\\Home\\User\\User.js",["115","116","117"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport './user.css';\r\nimport '../../../responsive.css';\r\nimport UserForm from './UserForm';\r\nimport {userContext} from '../../../App';\r\nimport UserData from './UserData';\r\n\r\nconst User = (props) => {\r\n   const data = props.data;\r\n    const [click, setClick] = useState({\r\n        clickToUser: true,\r\n        clickToFrom:false\r\n    });\r\n    const handleClick = () => {\r\n        const newClick = {...click}\r\n        newClick.clickToFrom = true;\r\n        newClick.clickToUser = false;\r\n        setClick(newClick)\r\n    }\r\n    const [user, setUser]  = useContext(userContext);\r\n    \r\n    return (\r\n        <div className='mt-5 text-center'>\r\n        \r\n          {click.clickToUser && <div>\r\n            \r\n                <div className=\"user-map\">\r\n                    {\r\n                        data.map(data =>{return  <UserData data={data}/>})\r\n                    }\r\n                </div>\r\n            \r\n            <div className=\"button d-flex justify-content-end\">\r\n                <button className=\"btn btn-primary\" onClick={handleClick}>Add User</button>\r\n            </div> \r\n           </div>}\r\n            <div>\r\n                {click.clickToFrom && <UserForm/>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default User;","E:\\Shafi\\remotePackRlab\\src\\Components\\Home\\Command\\Command.js",[],"E:\\Shafi\\remotePackRlab\\src\\Components\\Home\\User\\UserData.js",[],"E:\\Shafi\\remotePackRlab\\src\\Components\\Home\\Locations\\LocationUser.js",["118"],"import React, { useEffect, useState } from 'react';\r\nimport DevicesForm from './DevicesForm';\r\nimport logo1 from '../../../Resorces/logo1.png';\r\nimport logo2 from '../../../Resorces/logo2.png';\r\nimport logo3 from '../../../Resorces/logo3.png';\r\nimport './LocationStyle.css';\r\nimport '../../../responsive.css';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\nif (!firebase.apps.length) {\r\n    firebase.initializeApp({\r\n        apiKey: \"AIzaSyA47b6Rx0RioZApSMcyDooUmOpQFFs9WLE\",\r\n        authDomain: \"test1-68872.firebaseapp.com\",\r\n        projectId: \"test1-68872\",\r\n        storageBucket: \"test1-68872.appspot.com\",\r\n        messagingSenderId: \"504703093399\",\r\n        appId: \"1:504703093399:web:50a89636d428ac8bd2f7d2\"\r\n    });\r\n }else {\r\n    firebase.app(); // if already initialized, use that one\r\n }\r\n\r\nconst db = firebase.firestore();\r\n\r\nconst LocationUser = () => {\r\n    const [click, setClick] = useState({\r\n        locationCLick:true,\r\n        terminal: false\r\n    })\r\n    const handleTerminal = () => {\r\n        const newClick = {...click};\r\n        newClick.locationCLick = false;\r\n        newClick.terminal = true;\r\n        setClick(newClick)\r\n    }\r\n    const [dbUserData, setDbUserData] = useState();\r\n    const [loading, setLoading] = useState(true)\r\n    \r\n    useEffect(() => {\r\n        const getDataFirebase = [];\r\n        const userDb = db.collection(\"Devices\").onSnapshot((querySnapshot) => {\r\n            querySnapshot.forEach((doc) => {\r\n              getDataFirebase.push({...doc.data(), key:doc.id});\r\n            });\r\n            setDbUserData(getDataFirebase);\r\n            setLoading(false)\r\n        });\r\n        \r\n       return userDb;\r\n    }, []);\r\n    \r\n    return (\r\n        <div className=\"card-main-container\">\r\n           {click.locationCLick && <div className='row'>\r\n           <div className=\"col-md-4 mb-3\">\r\n            <div class=\"card card-container\" onClick={handleTerminal}>\r\n                <img src={logo1} class=\"card-img-top\" alt=\"...\"/>\r\n                <div class=\"card-body\">\r\n                   <h6 className=\"card-text-h6\">Location 1</h6>\r\n                   <p className=\"card-text-p\">Motor Pump 5kV</p>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            <div className=\"col-md-4 mb-3\">\r\n            <div class=\"card card-container\" onClick={handleTerminal}>\r\n                <img src={logo3} class=\"card-img-top\" alt=\"...\"/>\r\n                <div class=\"card-body\">\r\n                   <h6 className=\"card-text-h6\">Location 2</h6>\r\n                   <p className=\"card-text-p\">Truck FLVC01</p>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            <div className=\"col-md-4 mb-3\">\r\n            <div class=\"card card-container\" onClick={handleTerminal}>\r\n                <img src={logo2} class=\"card-img-top\" alt=\"...\"/>\r\n                <div class=\"card-body\">\r\n                   <h6 className=\"card-text-h6\">Location 3</h6>\r\n                   <p className=\"card-text-p\">Dust Fun 4HP</p>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            <div className=\"col-md-4 mb-3\">\r\n            <div class=\"card card-container\" onClick={handleTerminal}>\r\n                <img src={logo3} class=\"card-img-top\" alt=\"...\"/>\r\n                <div class=\"card-body\">\r\n                   <h6 className=\"card-text-h6\">Location 4</h6>\r\n                   <p className=\"card-text-p\">Truck FLHR09</p>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            <div className=\"col-md-4 mb-3\">\r\n            <div class=\"card card-container\" onClick={handleTerminal}>\r\n                <img src={logo1} class=\"card-img-top\" alt=\"...\"/>\r\n                <div class=\"card-body\">\r\n                   <h6 className=\"card-text-h6\">Location 6</h6>\r\n                   <p className=\"card-text-p\">Motor Pump 2kV</p>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            {/* <div className=\"col-md-4 mb-3\">\r\n            <div class=\"card\" style={{width: '10rem'}} onClick={handleTerminal}>\r\n                <img src=\"https://www.clipartmax.com/png/middle/301-3017435_icon-delivery-vector-image-delivery-truck-vector-png.png\" class=\"card-img-top\" alt=\"...\"/>\r\n                <div class=\"card-body\">\r\n                   <h6>Location 6</h6>\r\n                </div>\r\n            </div>\r\n            </div> */}\r\n           </div>}\r\n            {click.terminal && <DevicesForm data={dbUserData}/>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LocationUser;","E:\\Shafi\\remotePackRlab\\src\\Components\\Home\\User\\UserForm.js",["119"],"import React, { useEffect, useState } from 'react';\r\nimport './user.css'\r\n\r\nimport firebase from 'firebase';\r\nimport 'firebase/firestore';\r\n\r\n\r\nif (!firebase.apps.length) {\r\n    firebase.initializeApp({\r\n        apiKey: \"AIzaSyA47b6Rx0RioZApSMcyDooUmOpQFFs9WLE\",\r\n  authDomain: \"test1-68872.firebaseapp.com\",\r\n  projectId: \"test1-68872\",\r\n  storageBucket: \"test1-68872.appspot.com\",\r\n  messagingSenderId: \"504703093399\",\r\n  appId: \"1:504703093399:web:50a89636d428ac8bd2f7d2\"\r\n    });\r\n }else {\r\n    firebase.app(); // if already initialized, use that one\r\n }\r\n\r\nconst db = firebase.firestore();\r\n\r\nconst UserForm = () => {\r\n    const [userInfo, setuserInfo] = useState({\r\n        email:'',\r\n        name:'',\r\n        position:'',\r\n        Role:'admin',\r\n        Uid:'',\r\n    });\r\n    const [error, setError] = useState({\r\n        notError: true\r\n    })\r\n    const [userUpdate, setUserUpdate] = useState([])\r\n    const handleOnchange = (event) => {\r\n        const newUserInfo = {...userInfo};\r\n        newUserInfo[event.target.name] = event.target.value;\r\n        const RandomId = Math.random() * 100000000000000000000000000000000000000;\r\n        newUserInfo.Uid = RandomId;\r\n        setuserInfo(newUserInfo)\r\n    }\r\n    const handleOnChangeSelect = (event) => {\r\n        setuserInfo({Role: event.target.value})\r\n    };\r\n    const handleSubmit = (e) => {\r\n        db.collection(\"user\").add(userInfo)\r\n        .then((docRef) => {\r\n           \r\n        })\r\n        .catch((error) => {\r\n            \r\n        });\r\n        e.preventDefault();\r\n    }\r\n    \r\n    function arrayFunc(arr,key) {\r\n        let resultArray = [];\r\n        for(let i = 0; i < arr.length; i++){\r\n            if(arr[i].email === key){\r\n                resultArray = arr[i];\r\n            }\r\n            \r\n        }\r\n       \r\n        return resultArray\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        const userDb =  db.collection(\"user\").onSnapshot((querySnapshot) => {\r\n            const getDataFirebase = [];\r\n            querySnapshot.forEach((doc) => {\r\n              getDataFirebase.push({...doc.data(), key:doc.id});\r\n            });\r\n            \r\n            if(getDataFirebase.length > 0){\r\n                const functionalArray = arrayFunc(getDataFirebase, userInfo.email);\r\n                setUserUpdate(functionalArray);\r\n                console.log('firestore',getDataFirebase)\r\n                \r\n               \r\n            }\r\n        });\r\n        return userDb;\r\n    },[userInfo]);\r\n    useEffect(() => {\r\n        if(userUpdate.email === userInfo.email){\r\n            const newError = {...error}\r\n            newError.notError = false;\r\n            setError(newError)\r\n        }\r\n        else if(userUpdate.email != userInfo.email){\r\n            const newError = {...error}\r\n            newError.notError = true;\r\n            setError(newError)\r\n        }\r\n    }, [userInfo, userUpdate,error])\r\n    console.log('userData',userUpdate);\r\n    return (\r\n        <div style={{width:'50%', margin:'2% auto'}} className='text-center'>\r\n            <form action=\"\" onSubmit={handleSubmit}>\r\n            <div className='d-flex justiy-content-around mb-4' >\r\n                    <label htmlFor=\"Role\"  className='me-5  text-light interface-name'><h5>Role</h5></label>\r\n                    <select id=\"role\" className='form-control' onChange={handleOnChangeSelect}>\r\n                        <option value=\"admin\" >Admin</option>\r\n                        <option value=\"oparetors\">Oparetors</option>\r\n                        <option value=\"viewers\">Viewers</option>\r\n                    </select>\r\n                </div>\r\n                <div className='d-flex justiy-content-around mb-4'>\r\n                    <label htmlFor=\"userEmail\"  className='me-5 text-light interface-name'><h5>Email</h5></label>\r\n                    <input type=\"email\" id='userEmail' className='form-control' placeholder='Enter Your Email' name=\"email\" onChange={handleOnchange}/>\r\n                </div>\r\n                <div className='d-flex justiy-content-around mb-4'>\r\n                    <label htmlFor=\"name\" className='me-5 text-light interface-name'><h5>Name</h5></label>\r\n                    <input type=\"text\" id='name' placeholder='Enter Your Name' className='form-control' name=\"name\" onChange={handleOnchange}/>\r\n                </div>\r\n                <div className='d-flex justiy-content-around mb-4'>\r\n                    <label htmlFor=\"position\"  className='me-5 text-light interface-name'><h5>Position</h5></label>\r\n                    <input type=\"text\" id='position' placeholder='Enter Your position' className='form-control' name=\"position\" onChange={handleOnchange}/>\r\n                </div>\r\n                {error.notError && <button className=\"btn btn-primary create-button\" type=\"submit\">Create/Save</button>}\r\n                {error.notError===false && <p className=\"text-danger\">This email user Already created. please try with another email.</p>}\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserForm;","E:\\Shafi\\remotePackRlab\\src\\Components\\Home\\Locations\\DevicesForm.js",["120","121"],"import React, { useState } from 'react';\r\nimport './Location.css';\r\n\r\nimport DevicesData from './DevicesData';\r\n\r\n\r\nconst DevicesForm = (props) => {\r\n    const data = props.data;\r\n\r\n    \r\n   const [deviceData, setDeviceData] = useState([])\r\n\r\n  \r\n    return (\r\n            <div>\r\n               <div className=\"container\">\r\n                \r\n                {\r\n                    data.map(item =>  { return <DevicesData data={item}/> })\r\n                  }\r\n                </div>\r\n\r\n                <div className=\"button d-flex justify-content-end deviceFrom-location-button\">\r\n                    <button className=\"btn btn-primary\">Edit Location</button>\r\n                </div>    \r\n          \r\n          \r\n            </div>\r\n        \r\n    );\r\n};\r\n\r\nexport default DevicesForm;","E:\\Shafi\\remotePackRlab\\src\\Components\\Home\\Locations\\DevicesData.js",["122","123","124","125"],"import React, { useContext, useState } from 'react';\r\nimport { userContext } from '../../../App';\r\nimport '../../../responsive.css';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n  } from \"react-router-dom\";\r\nconst DevicesData = (props) => {\r\n    const [user, setUser] = useContext(userContext)\r\n    const {model,key, format} = props.data;\r\n    const [edit, setEdit] = useState({\r\n        editable:true,\r\n        clickEdit: false\r\n    })\r\n    const handleEdit = () => {\r\n        const newUser = {...edit};\r\n        newUser.editable = false;\r\n        newUser.clickEdit = true;\r\n        setEdit(newUser);\r\n        const newUserInfo = {...user};\r\n        newUserInfo.deviceID = key;\r\n        setUser(newUserInfo);\r\n        \r\n     };\r\n    const handleSelect = (e) => {\r\n        const newUser = {...user};\r\n        newUser.notClick = false;\r\n        newUser.click = true;\r\n        newUser.deviceID = key;\r\n        setUser(newUser);\r\n        e.preventDefault()\r\n    } \r\n    \r\n    return (\r\n        <div>\r\n            <div className=\"clients d-flex justify-content-evenly mb-5\">\r\n                    {edit.editable && <div className=\"form-name\"><p className=\"form-name-p\">{model}</p></div>}\r\n                    {edit.clickEdit && <input type=\"text\" placeholder='edit your Meter' name='one'/>}\r\n                    <button className=\"btn btn-dark btnEdit\" onClick={handleEdit}>Edit</button>\r\n                    <Link to={`/${format}/${key}`} className=\"btn btn-primary btnArea\">Select</Link>\r\n                </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DevicesData;",{"ruleId":"126","severity":1,"message":"127","line":7,"column":3,"nodeType":"128","messageId":"129","endLine":7,"endColumn":7},{"ruleId":"126","severity":1,"message":"130","line":6,"column":18,"nodeType":"128","messageId":"129","endLine":6,"endColumn":25},{"ruleId":"126","severity":1,"message":"131","line":9,"column":22,"nodeType":"128","messageId":"129","endLine":9,"endColumn":28},{"ruleId":"126","severity":1,"message":"132","line":10,"column":5,"nodeType":"128","messageId":"129","endLine":10,"endColumn":11},{"ruleId":"126","severity":1,"message":"133","line":11,"column":5,"nodeType":"128","messageId":"129","endLine":11,"endColumn":10},{"ruleId":"126","severity":1,"message":"127","line":12,"column":5,"nodeType":"128","messageId":"129","endLine":12,"endColumn":9},{"ruleId":"134","severity":1,"message":"135","line":97,"column":8,"nodeType":"136","endLine":97,"endColumn":17,"suggestions":"137"},{"ruleId":"126","severity":1,"message":"127","line":10,"column":10,"nodeType":"128","messageId":"129","endLine":10,"endColumn":14},{"ruleId":"126","severity":1,"message":"138","line":43,"column":12,"nodeType":"128","messageId":"129","endLine":43,"endColumn":19},{"ruleId":"139","severity":1,"message":"140","line":231,"column":21,"nodeType":"141","endLine":231,"endColumn":55},{"ruleId":"126","severity":1,"message":"130","line":31,"column":18,"nodeType":"128","messageId":"129","endLine":31,"endColumn":25},{"ruleId":"126","severity":1,"message":"138","line":34,"column":12,"nodeType":"128","messageId":"129","endLine":34,"endColumn":19},{"ruleId":"134","severity":1,"message":"142","line":60,"column":8,"nodeType":"136","endLine":60,"endColumn":20,"suggestions":"143"},{"ruleId":"126","severity":1,"message":"144","line":1,"column":17,"nodeType":"128","messageId":"129","endLine":1,"endColumn":30},{"ruleId":"126","severity":1,"message":"145","line":2,"column":56,"nodeType":"128","messageId":"129","endLine":2,"endColumn":63},{"ruleId":"126","severity":1,"message":"146","line":49,"column":12,"nodeType":"128","messageId":"129","endLine":49,"endColumn":18},{"ruleId":"126","severity":1,"message":"147","line":49,"column":20,"nodeType":"128","messageId":"129","endLine":49,"endColumn":29},{"ruleId":"126","severity":1,"message":"130","line":30,"column":18,"nodeType":"128","messageId":"129","endLine":30,"endColumn":25},{"ruleId":"126","severity":1,"message":"148","line":6,"column":10,"nodeType":"128","messageId":"129","endLine":6,"endColumn":19},{"ruleId":"126","severity":1,"message":"148","line":1,"column":29,"nodeType":"128","messageId":"129","endLine":1,"endColumn":38},{"ruleId":"126","severity":1,"message":"149","line":20,"column":12,"nodeType":"128","messageId":"129","endLine":20,"endColumn":16},{"ruleId":"126","severity":1,"message":"130","line":20,"column":18,"nodeType":"128","messageId":"129","endLine":20,"endColumn":25},{"ruleId":"126","severity":1,"message":"138","line":38,"column":12,"nodeType":"128","messageId":"129","endLine":38,"endColumn":19},{"ruleId":"150","severity":1,"message":"151","line":92,"column":34,"nodeType":"152","messageId":"153","endLine":92,"endColumn":36},{"ruleId":"126","severity":1,"message":"154","line":11,"column":11,"nodeType":"128","messageId":"129","endLine":11,"endColumn":21},{"ruleId":"126","severity":1,"message":"155","line":11,"column":23,"nodeType":"128","messageId":"129","endLine":11,"endColumn":36},{"ruleId":"126","severity":1,"message":"131","line":5,"column":22,"nodeType":"128","messageId":"129","endLine":5,"endColumn":28},{"ruleId":"126","severity":1,"message":"132","line":6,"column":5,"nodeType":"128","messageId":"129","endLine":6,"endColumn":11},{"ruleId":"126","severity":1,"message":"133","line":7,"column":5,"nodeType":"128","messageId":"129","endLine":7,"endColumn":10},{"ruleId":"126","severity":1,"message":"156","line":27,"column":11,"nodeType":"128","messageId":"129","endLine":27,"endColumn":23},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'setUser' is assigned a value but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'format' and 'id'. Either include them or remove the dependency array.","ArrayExpression",["157"],"'loading' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'menu'. Either include it or remove the dependency array.",["158"],"'PureComponent' is defined but never used.","'Tooltip' is defined but never used.","'params' is assigned a value but never used.","'setParams' is assigned a value but never used.","'useEffect' is defined but never used.","'user' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'deviceData' is assigned a value but never used.","'setDeviceData' is assigned a value but never used.","'handleSelect' is assigned a value but never used.",{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},"Update the dependencies array to be: [format, id, loading]",{"range":"163","text":"164"},"Update the dependencies array to be: [dbUserData, menu]",{"range":"165","text":"166"},[3250,3259],"[format, id, loading]",[1988,2000],"[dbUserData, menu]"]