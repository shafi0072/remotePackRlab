[{"F:\\Rlab\\client\\src\\index.js":"1","F:\\Rlab\\client\\src\\reportWebVitals.js":"2","F:\\Rlab\\client\\src\\App.js":"3","F:\\Rlab\\client\\src\\Components\\PrivateRoute\\PrivateRoute.js":"4","F:\\Rlab\\client\\src\\Components\\Login\\Login.js":"5","F:\\Rlab\\client\\src\\Components\\Login\\RestPassword.js":"6","F:\\Rlab\\client\\src\\Components\\Home\\UserHome\\UserHome.js":"7","F:\\Rlab\\client\\src\\Components\\Home\\DeviceDashBoard\\DeviceDashBoard.js":"8","F:\\Rlab\\client\\src\\Components\\Home\\HomeMain\\Home.js":"9","F:\\Rlab\\client\\src\\Components\\Login\\firebase.config.js":"10","F:\\Rlab\\client\\src\\Components\\Home\\UserHome\\Rechart.js":"11","F:\\Rlab\\client\\src\\Components\\Shared\\Navbar\\Navbar.js":"12","F:\\Rlab\\client\\src\\Components\\Shared\\Navbar.js":"13","F:\\Rlab\\client\\src\\Components\\Home\\Locations\\Locations.js":"14","F:\\Rlab\\client\\src\\Components\\Home\\User\\User.js":"15","F:\\Rlab\\client\\src\\Components\\Home\\Command\\Command.js":"16","F:\\Rlab\\client\\src\\Components\\Carusel\\Carusel.js":"17","F:\\Rlab\\client\\src\\Components\\Footer\\Footer.js":"18","F:\\Rlab\\client\\src\\Components\\Card\\Card.js":"19","F:\\Rlab\\client\\src\\Components\\Home\\Devices\\Devices.js":"20","F:\\Rlab\\client\\src\\Components\\Home\\Locations\\DeveiceMeter.js":"21","F:\\Rlab\\client\\src\\Components\\Home\\Locations\\LocationUser.js":"22","F:\\Rlab\\client\\src\\Components\\Home\\User\\UserForm.js":"23","F:\\Rlab\\client\\src\\Components\\Home\\User\\UserData.js":"24","F:\\Rlab\\client\\src\\Components\\Home\\Locations\\DevicesForm.js":"25","F:\\Rlab\\client\\src\\Components\\Home\\Locations\\DevicesData.js":"26","F:\\Rlab\\client\\src\\Components\\Home\\DeviceDashBoard\\TemporaryTest.js":"27","F:\\Rlab\\client\\src\\Components\\Home\\Devices\\MainDevices.js":"28","F:\\Rlab\\client\\src\\Components\\Home\\Locations\\MainLocation.js":"29","F:\\Rlab\\client\\src\\Components\\Home\\Command\\MainCommand.js":"30"},{"size":500,"mtime":1623478759250,"results":"31","hashOfConfig":"32"},{"size":362,"mtime":1623478759250,"results":"33","hashOfConfig":"32"},{"size":2111,"mtime":1625737330436,"results":"34","hashOfConfig":"32"},{"size":632,"mtime":1624178050880,"results":"35","hashOfConfig":"32"},{"size":11623,"mtime":1625566269862,"results":"36","hashOfConfig":"32"},{"size":1985,"mtime":1625321789865,"results":"37","hashOfConfig":"32"},{"size":3467,"mtime":1625239702788,"results":"38","hashOfConfig":"32"},{"size":3841,"mtime":1625581724179,"results":"39","hashOfConfig":"32"},{"size":508,"mtime":1625494327589,"results":"40","hashOfConfig":"32"},{"size":646,"mtime":1625580811866,"results":"41","hashOfConfig":"32"},{"size":2090,"mtime":1623950619878,"results":"42","hashOfConfig":"32"},{"size":2144,"mtime":1625737837403,"results":"43","hashOfConfig":"32"},{"size":2683,"mtime":1625737302204,"results":"44","hashOfConfig":"32"},{"size":5161,"mtime":1625737745206,"results":"45","hashOfConfig":"32"},{"size":1311,"mtime":1625581122964,"results":"46","hashOfConfig":"32"},{"size":2345,"mtime":1624959641075,"results":"47","hashOfConfig":"32"},{"size":4010,"mtime":1623502082101,"results":"48","hashOfConfig":"32"},{"size":2097,"mtime":1625494327589,"results":"49","hashOfConfig":"32"},{"size":2123,"mtime":1625494327588,"results":"50","hashOfConfig":"32"},{"size":4559,"mtime":1625566216561,"results":"51","hashOfConfig":"32"},{"size":11638,"mtime":1625655803070,"results":"52","hashOfConfig":"32"},{"size":4513,"mtime":1625581151303,"results":"53","hashOfConfig":"32"},{"size":4949,"mtime":1625581071587,"results":"54","hashOfConfig":"32"},{"size":765,"mtime":1624551381837,"results":"55","hashOfConfig":"32"},{"size":759,"mtime":1625502973203,"results":"56","hashOfConfig":"32"},{"size":1627,"mtime":1625502973202,"results":"57","hashOfConfig":"32"},{"size":1358,"mtime":1625581175237,"results":"58","hashOfConfig":"32"},{"size":412,"mtime":1625736469635,"results":"59","hashOfConfig":"32"},{"size":417,"mtime":1625736805799,"results":"60","hashOfConfig":"32"},{"size":410,"mtime":1625737227913,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1xfza88",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"64"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"64"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\Rlab\\client\\src\\index.js",[],["137","138"],"F:\\Rlab\\client\\src\\reportWebVitals.js",[],"F:\\Rlab\\client\\src\\App.js",["139","140"],"F:\\Rlab\\client\\src\\Components\\PrivateRoute\\PrivateRoute.js",["141"],"import React, { useContext } from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { userContext } from '../../App';\r\n\r\nconst PrivateRoute = ({ children, ...rest }) => {\r\n    const [user, setUser] = useContext(userContext);\r\n    return (\r\n        <div>\r\n            <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n      user.email? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/auth\",\r\n              state: { from: location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;","F:\\Rlab\\client\\src\\Components\\Login\\Login.js",["142"],"import React, { useContext, useState } from 'react';\r\n\r\nimport './Login.css';\r\nimport '../../responsive.css';\r\nimport logo from '../../Resorces/logo_RLAB.png'\r\nimport { userContext } from '../../App';\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport firebaseConfig from './firebase.config';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport { useEffect } from 'react';\r\nimport 'firebase/firestore';\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nif (!firebase.apps.length) {\r\n    firebase.initializeApp({\r\n        apiKey: \"AIzaSyA47b6Rx0RioZApSMcyDooUmOpQFFs9WLE\",\r\n        authDomain: \"test1-68872.firebaseapp.com\",\r\n        projectId: \"test1-68872\",\r\n        storageBucket: \"test1-68872.appspot.com\",\r\n        messagingSenderId: \"504703093399\",\r\n        appId: \"1:504703093399:web:50a89636d428ac8bd2f7d2\"\r\n    });\r\n }else {\r\n    firebase.app(); // if already initialized, use that one\r\n }\r\n\r\nconst db = firebase.firestore();\r\n\r\nconst Login = () => {\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n\r\n    \r\n\r\n    const { from } = location.state || { from: { pathname: \"/\" } };\r\n\r\n    const [click, setClick] = useState({\r\n        login: true,\r\n        signUp: false\r\n    });\r\n    const [userData, setUserData] = useState([]);\r\n    const [loading, setLoading] = useState(true)\r\n    const handleSignUp = () => {\r\n        const newClick = {...click}\r\n        newClick.login = false;\r\n        newClick.signUp  = true;\r\n        setClick(newClick)\r\n    }\r\n    \r\n    const handleLogin = () => {\r\n        const newClick = {...click}\r\n        newClick.login = true;\r\n        newClick.signUp  = false;\r\n        setClick(newClick)\r\n    };\r\n    const [user, setUser] = useContext(userContext);\r\n    const handleOnChange = (e) => {\r\n        const newUserInfo = {...user}\r\n        newUserInfo[e.target.name] = e.target.value;\r\n        setUser(newUserInfo);\r\n        \r\n    }\r\n    const handleCreateAccount = (e) => {\r\n        firebase.auth().createUserWithEmailAndPassword(user.email, user.ConfirmPassword)\r\n        .then(res => {\r\n            const newUserInfo = {...user};\r\n            newUserInfo.error = \"\";\r\n            newUserInfo.success = true;\r\n            setUser(newUserInfo);\r\n            updateUserInfo(user.name)\r\n        }\r\n        )\r\n        .catch(error => {\r\n            const newUserInfo = {\r\n                ...user\r\n            };\r\n            newUserInfo.error = error.message;\r\n            newUserInfo.success = false;\r\n            setUser(newUserInfo)\r\n\r\n        });\r\n        e.preventDefault()\r\n    }\r\n   const handleSubmitLogin = (e) => {\r\n    firebase.auth().signInWithEmailAndPassword(user.email, user.ConfirmPassword)\r\n    .then(res => {\r\n\r\n        const newUserInfo = {\r\n            ...user\r\n        };\r\n        newUserInfo.email = res.user.email;\r\n        newUserInfo.error = \"\";\r\n        newUserInfo.success = true;\r\n        setUser(newUserInfo);\r\n        history.replace(from);\r\n    \r\n    if(res.user.email === 'safi29317@gmail.com'){\r\n        const newUser = {...user}\r\n        newUser.admin = true;\r\n        newUser.viewer = false;\r\n        setUser(newUser);\r\n    }else if(userData.Role === 'admin'){\r\n        const newUser = {...user}\r\n        newUser.admin = true;\r\n        newUser.viewer = false;\r\n        setUser(newUser);\r\n    }\r\n    else if(userData.Role === 'oparetors'){\r\n        const newUser = {...user}\r\n        newUser.admin = true;\r\n        newUser.viewer = false;\r\n        setUser(newUser);\r\n    }\r\n    else{\r\n        const newUser = {...user}\r\n        newUser.admin = false;\r\n        newUser.viewer = true;\r\n        setUser(newUser);\r\n    }\r\n    \r\n        \r\n    })\r\n    .catch(function (error) {\r\n        const newUserInfo = {\r\n            ...user\r\n        };\r\n        newUserInfo.error = error.message;\r\n        newUserInfo.success = false;\r\n        setUser(newUserInfo);\r\n        \r\n    })\r\n    \r\n    \r\n    e.preventDefault()\r\n   }\r\n   const updateUserInfo = name => {\r\n    const user = firebase.auth().currentUser;\r\n\r\n    user.updateProfile({\r\n    displayName: name,\r\n    }).then(function() {\r\n   \r\n    }).catch(function(error) {\r\n    \r\n    });\r\n}\r\nfunction arrayFunc(arr,key) {\r\n    let resultArray = [];\r\n    for(let i = 0; i < arr.length; i++){\r\n        if(arr[i].email === key){\r\n            resultArray = arr[i];\r\n        }\r\n        \r\n    }\r\n   \r\n    return resultArray\r\n};\r\nuseEffect(() => {\r\n    const userDb =  db.collection(\"user\").onSnapshot((querySnapshot) => {\r\n        const getDataFirebase = [];\r\n        querySnapshot.forEach((doc) => {\r\n          getDataFirebase.push({...doc.data(), key:doc.id});\r\n        });\r\n        \r\n        if(getDataFirebase.length > 0){\r\n            const functionalArray = arrayFunc(getDataFirebase, user.email)\r\n            setUserData(functionalArray);\r\n          \r\n            setLoading(false)\r\n           \r\n        }\r\n    });\r\n    return userDb;\r\n}, [user]);\r\n\r\n\r\n\r\n    return (\r\n        <div className='background d-flex justify-content-center p-5'>\r\n\r\n            {click.login && <div className=\"loginBox\">\r\n                <div className=\"text-center\">\r\n                    <img\r\n                        src={logo}\r\n                        alt=\"\"\r\n                        style={{\r\n                            width: '30%'\r\n                        }}/>\r\n                </div>\r\n                <div className=\"loginText mt-5 text-center\">\r\n                    <h2\r\n                        style={{\r\n                            fontFamily: \"'Raleway', sans-serif\"\r\n                        }}>Log In</h2>\r\n                </div>\r\n                <p className=\"text-danger\">{user.error}</p>\r\n                {user.success && <p className='text-success'>Log in successfull</p>}\r\n                <form action=\"\" onSubmit={handleSubmitLogin}>\r\n                <div className=\"\">\r\n                    <div class=\"mb-3 row\">\r\n\r\n                        <div class=\"col-sm-10 input-box\">\r\n                            <input\r\n                                onChange={handleOnChange}\r\n                                type=\"text\"\r\n                                class=\"form-control\"\r\n                                id=\"staticEmail\"\r\n                                name=\"email\"\r\n                                placeholder=\"User email\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"mb-3 row\">\r\n                        <div class=\"col-sm-10 input-box\">\r\n                            <input\r\n                                type=\"password\"\r\n                                onChange={handleOnChange}\r\n                                class=\"form-control\"\r\n                                id=\"inputPassword\"\r\n                                name=\"ConfirmPassword\"\r\n                                placeholder=\"Password\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"remember\">\r\n                    <input className=\"rememberCheckbox\" type=\"checkbox\"/>\r\n                    <label htmlFor=\"\">Remember Me</label>\r\n                </div>\r\n                <div className=\"forgotPass\">\r\n                    <Link to='/restPassword' className=\"forgotTxt\">Forgot Password</Link>\r\n                </div>\r\n                <div>\r\n                    <button className=\"form-control bg-primary text-light\" type='submit'>Log In</button>\r\n                </div>\r\n                <div className=\"creatTxt\">\r\n                    <p>Don't have an account?<span onClick={handleSignUp} className=\"creatAccount\">Create an account</span>\r\n                    </p>\r\n                </div>\r\n                \r\n                </form>\r\n            </div>}\r\n\r\n            {click.signUp && <div className=\"loginBox signup\">\r\n                <div className=\"text-center\">\r\n                    <img\r\n                        src={logo}\r\n                        alt=\"\"\r\n                        style={{\r\n                            width: '30%'\r\n                        }}/>\r\n                </div>\r\n                <div className=\"loginText mt-5 text-center\">\r\n                    <h2\r\n                        style={{\r\n                            fontFamily: \"'Raleway', sans-serif\"\r\n                        }}>Sign Up</h2>\r\n                </div>\r\n                <p className='text-danger'>{user.error}</p>\r\n                {user.success && <p className='text-success'>SignUp SuccessFull</p>}\r\n                <form action=\"\" onSubmit={handleCreateAccount}>\r\n                <div className=\"\">\r\n                    <div class=\"mb-3 row\">\r\n\r\n                        <div class=\"col-sm-10 input-box\">\r\n                            <input\r\n                                onChange={handleOnChange}\r\n                                type=\"text\"\r\n                                class=\"form-control\"\r\n                                id=\"staticEmail\"\r\n                                placeholder=\"First Name\"\r\n                                name=\"name\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"mb-3 row\">\r\n\r\n                        <div class=\"col-sm-10 input-box\">\r\n                            <input\r\n                            onChange={handleOnChange}\r\n                                type=\"text\"\r\n                                class=\"form-control\"\r\n                                id=\"staticEmail\"\r\n                                placeholder=\"Last Name\"\r\n                                name=\"name\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"mb-3 row\">\r\n\r\n                        <div class=\"col-sm-10 input-box\">\r\n                            <input\r\n                            onChange={handleOnChange}\r\n                                type=\"email\"\r\n                                class=\"form-control\"\r\n                                id=\"staticEmail\"\r\n                                placeholder=\"Email\"\r\n                                name=\"email\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"mb-3 row\">\r\n                        <div class=\"col-sm-10 input-box\">\r\n                            <input\r\n                            onChange={handleOnChange}\r\n                                type=\"password\"\r\n                                class=\"form-control\"\r\n                                id=\"inputPassword\"\r\n                                name=\"ConfirmPassword\"\r\n                                placeholder=\"Password\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"mb-3 row\">\r\n                        <div class=\"col-sm-10 input-box\">\r\n                            <input\r\n                            onChange={handleOnChange}\r\n                                type=\"password\"\r\n                                class=\"form-control\"\r\n                                id=\"inputPassword\"\r\n                                name=\"ConfirmPassword\"\r\n                                placeholder=\"Confirm Password\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div>\r\n                    <button className=\"form-control bg-primary text-light\" type='submit'>Create</button>\r\n                </div>\r\n                <div className=\"creatTxt\">\r\n                    <p>Already have an account?<span onClick={handleLogin} className=\"creatAccount\">Log In</span>\r\n                    </p>\r\n                </div>\r\n                \r\n                </form>\r\n            </div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;","F:\\Rlab\\client\\src\\Components\\Login\\RestPassword.js",["143","144"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport { useState } from 'react';\r\n\r\nconst RestPassword = () => {\r\n    const [user, setUser] = useState({\r\n        email:'',\r\n        message:''\r\n    })\r\n    const handleOnChange = (e) => {\r\n        const newUser = {...user}\r\n        newUser[e.target.name] = e.target.value;\r\n        setUser(newUser)\r\n    }\r\n    const handleSubmit =(e) =>  {\r\n        firebase.auth().sendPasswordResetEmail(user.email)\r\n    .then(() => {\r\n      const newUser = {...user}\r\n      newUser.message = 'A verification link was sented on your email check the gmail';\r\n      setUser(newUser)\r\n    })\r\n    .catch((error) => {\r\n      var errorCode = error.code;\r\n      var errorMessage = error.message;\r\n      // ..\r\n    });\r\n    e.preventDefault()\r\n    }\r\n    return (\r\n        <div className='row d-flex justify-content-center'>\r\n           <div className=\"col-md-5 mt-5\">\r\n           <form action=\"\" onSubmit={handleSubmit}>\r\n                <div className=\"\">\r\n                    <div class=\"mb-3 row\">\r\n\r\n                        <div class=\"col-sm-10 input-box\">\r\n                            <input\r\n                                onChange={handleOnChange}\r\n                                type=\"text\"\r\n                                class=\"form-control\"\r\n                                id=\"staticEmail\"\r\n                                name=\"email\"\r\n                                placeholder=\"email\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <button className=\"form-control bg-primary text-light\" type='submit'>Rest Passoword</button>\r\n                    <Link to=\"/auth\">Log in</Link>\r\n                </div>\r\n                </form>\r\n                <p className=\"text-success\">{user.message}</p>\r\n           </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RestPassword;","F:\\Rlab\\client\\src\\Components\\Home\\UserHome\\UserHome.js",["145","146","147"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport Navbar from '../../Shared/Navbar';\r\nimport './UserHome.css'\r\nimport User from '../User/User'\r\nimport logo from '../../../Resorces/logo_RLAB.png';\r\nimport { userContext } from '../../../App';\r\nimport Rechart from './Rechart';\r\nimport Devices from '../Devices/Devices';\r\nimport Location from '../Locations/Locations';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport Command from '../Command/Command';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nif (!firebase.apps.length) {\r\n    firebase.initializeApp({\r\n        apiKey: \"AIzaSyA47b6Rx0RioZApSMcyDooUmOpQFFs9WLE\",\r\n        authDomain: \"test1-68872.firebaseapp.com\",\r\n        projectId: \"test1-68872\",\r\n        storageBucket: \"test1-68872.appspot.com\",\r\n        messagingSenderId: \"504703093399\",\r\n        appId: \"1:504703093399:web:50a89636d428ac8bd2f7d2\"\r\n    });\r\n }else {\r\n    firebase.app(); // if already initialized, use that one\r\n }\r\n\r\nconst db = firebase.firestore();\r\n\r\nconst UserHome = () => {\r\n   \r\n    const [user, setUser] = useContext(userContext);\r\n    \r\n    const [dbUserData, setDbUserData] = useState();\r\n    const [loading, setLoading] = useState(true)\r\n    const [menu, setMenu] = useState({\r\n        showMenu:true,\r\n        hideMenu:false,\r\n        suspendMenu: false,\r\n    })\r\n    useEffect(() => {\r\n        const getDataFirebase = [];\r\n        const userDb = db.collection(\"user\").onSnapshot((querySnapshot) => {\r\n            querySnapshot.forEach((doc) => {\r\n              getDataFirebase.push({...doc.data(), key:doc.id});\r\n            });\r\n            setDbUserData(getDataFirebase);\r\n            setLoading(false)\r\n        });\r\n        \r\n       return userDb;\r\n    }, []);\r\n   \r\n    useEffect(() => {\r\n        if(window.outerWidth <= 500){\r\n            const newMenu = {...menu};\r\n            newMenu.showMenu = false;\r\n            newMenu.hideMenu = true;\r\n            setMenu(newMenu);\r\n        }\r\n    }, []);\r\n    const handleMenuClick = (e) => {\r\n        const newMenu = {...menu};\r\n            newMenu.showMenu = true;\r\n            newMenu.hideMenu = false;\r\n            newMenu.suspendMenu = true;\r\n            setMenu(newMenu);\r\n    }\r\n    const handleSubMenuClose = () => {\r\n        const newMenu = {...menu};\r\n            newMenu.showMenu = false;\r\n            newMenu.hideMenu = true;\r\n            newMenu.suspendMenu = false;\r\n            setMenu(newMenu);\r\n    }\r\n    return (\r\n        <div className='row'>\r\n            \r\n            <div className=\"col-md-3 \" style={{margin:'0', padding:'0', backgroundColor:'#010221'}}>\r\n            {menu.suspendMenu && <MenuIcon onClick = {handleSubMenuClose} className=\"text-light\" style={{fontSize:'50px'}}/>}\r\n                {menu.showMenu && <Navbar/>}\r\n                {menu.hideMenu && <MenuIcon onClick = {handleMenuClick} className=\"text-light\" style={{fontSize:'50px'}}/>}\r\n                \r\n            </div>\r\n            <div className=\"col-md-9 backgroundSIDE text-center\">\r\n            \r\n            <img src={logo} alt=\"\" style={{width:'20%'}} className='mt-5' />\r\n\r\n                {user.userHome && <Rechart/>}\r\n                {user.user&& user.admin && <User data={dbUserData}/> }\r\n                \r\n                {user.devices && <Devices/>}\r\n                {user.locations && <Location/>}\r\n                {user.command && <Command/>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserHome;","F:\\Rlab\\client\\src\\Components\\Home\\DeviceDashBoard\\DeviceDashBoard.js",["148","149","150","151"],"import React, { useEffect, useState } from 'react';\r\nimport Navbar from '../../Shared/Navbar';\r\nimport DeveiceMeter from '../Locations/DeveiceMeter';\r\nimport firebase from 'firebase/app';\r\nimport logo from '../../../Resorces/logo_RLAB.png';\r\nimport './DeviceDashBoard.css';\r\nimport 'firebase/firestore';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    useParams\r\n  } from \"react-router-dom\";\r\n\r\nif (!firebase.apps.length) {\r\n    firebase.initializeApp({\r\n        apiKey: \"AIzaSyA47b6Rx0RioZApSMcyDooUmOpQFFs9WLE\",\r\n        authDomain: \"test1-68872.firebaseapp.com\",\r\n        projectId: \"test1-68872\",\r\n        storageBucket: \"test1-68872.appspot.com\",\r\n        messagingSenderId: \"504703093399\",\r\n        appId: \"1:504703093399:web:50a89636d428ac8bd2f7d2\"\r\n    });\r\n }else {\r\n    firebase.app(); // if already initialized, use that one\r\n }\r\n\r\nconst db = firebase.firestore();\r\n\r\n\r\n\r\n\r\nconst DeviceDashBoard = () => {\r\n    let { format, id } = useParams();\r\n\r\n\r\n    const [status,setStatus] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    function arrayFunc(arr,key) {\r\n        let resultArray = [];\r\n        for(let i = 0; i < arr.length; i++){\r\n            if(arr[i]._id === key){\r\n                resultArray = arr[i];\r\n            }\r\n        }\r\n        return resultArray\r\n    };\r\n    \r\n    useEffect(() => {\r\n        if(format === \"ENER01\"){\r\n            const userDb =  db.collection(\"SOLARPAN01\").onSnapshot((querySnapshot) => {\r\n                const getDataFirebase = [];\r\n                querySnapshot.forEach((doc) => {\r\n                  getDataFirebase.push({...doc.data(), key:doc.id});\r\n                });\r\n                \r\n                if(getDataFirebase.length > 0){\r\n                    const functionalArray = arrayFunc(getDataFirebase, id)\r\n                    setStatus(functionalArray)\r\n                    setLoading(false)\r\n                }\r\n            });\r\n            return userDb\r\n        }\r\n        else if(format === \"RTD01\"){\r\n            const userDb =  db.collection(\"RTD0000001\").onSnapshot((querySnapshot) => {\r\n                const getDataFirebase = [];\r\n                querySnapshot.forEach((doc) => {\r\n                  getDataFirebase.push({...doc.data(), key:doc.id});\r\n                });\r\n                \r\n                if(getDataFirebase.length > 0){\r\n                    const functionalArray = arrayFunc(getDataFirebase, id)\r\n                    setStatus(functionalArray)\r\n                    setLoading(false)\r\n                }\r\n            });\r\n            return userDb\r\n        }\r\n        else if(format === \"GTY01\"){\r\n            const userDb =  db.collection(\"GTY0000001\").where().onSnapshot((querySnapshot) => {\r\n                const getDataFirebase = [];\r\n                querySnapshot.forEach((doc) => {\r\n                  getDataFirebase.push({...doc.data(), key:doc.id});\r\n                });\r\n                \r\n                if(getDataFirebase.length > 0){\r\n                    const functionalArray = arrayFunc(getDataFirebase, id)\r\n                    setStatus(functionalArray)\r\n                    setLoading(false)\r\n                }\r\n            });\r\n            return userDb\r\n        }\r\n        \r\n        \r\n     \r\n    }, [loading, format, id]);\r\n  console.log({status});\r\n    return (\r\n        <div className='row'>\r\n            <div className=\"col-md-3 dashboard-navbar\" style={{margin:'0', padding:'0'}}>\r\n                <Navbar/>\r\n            </div>\r\n            <div className=\"col-md-9 dashboard-background text-center\">\r\n            <img src={logo} alt=\"\" style={{width:'20%'}} className='mt-5' />\r\n                <h1 className='text-light mt-2'>Format: {format}</h1>\r\n                <DeveiceMeter data={status}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DeviceDashBoard;","F:\\Rlab\\client\\src\\Components\\Home\\HomeMain\\Home.js",[],"F:\\Rlab\\client\\src\\Components\\Login\\firebase.config.js",[],"F:\\Rlab\\client\\src\\Components\\Home\\UserHome\\Rechart.js",["152","153"],"import React, { PureComponent } from 'react';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\r\n\r\nconst data = [\r\n  {\r\n    name: 'Page A',\r\n    uv: 4000,\r\n    pv: 2400,\r\n    amt: 2400,\r\n  },\r\n  {\r\n    name: 'Page B',\r\n    uv: 3000,\r\n    pv: 1398,\r\n    amt: 2210,\r\n  },\r\n  {\r\n    name: 'Page C',\r\n    uv: 2000,\r\n    pv: 9800,\r\n    amt: 2290,\r\n  },\r\n  {\r\n    name: 'Page D',\r\n    uv: 2780,\r\n    pv: 3908,\r\n    amt: 2000,\r\n  },\r\n  {\r\n    name: 'Page E',\r\n    uv: 1890,\r\n    pv: 4800,\r\n    amt: 2181,\r\n  },\r\n  {\r\n    name: 'Page F',\r\n    uv: 2390,\r\n    pv: 3800,\r\n    amt: 2500,\r\n  },\r\n  {\r\n    name: 'Page G',\r\n    uv: 3490,\r\n    pv: 4300,\r\n    amt: 2100,\r\n  },\r\n];\r\n\r\n\r\nconst Rechart = () => {\r\n    return (\r\n        <div className='mt-5'>\r\n        <LineChart width={900} height={160} data={data} >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" interval=\"preserveEnd\" />\r\n          <YAxis interval=\"preserveEnd\" />\r\n          <Legend />\r\n          <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\r\n          <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" />\r\n        </LineChart>\r\n\r\n        <LineChart width={900} height={160} data={data}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" interval=\"preserveStart\" />\r\n          <YAxis interval=\"preserveStart\" />\r\n          <Legend />\r\n          <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\r\n          <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" />\r\n        </LineChart>\r\n\r\n        <LineChart width={900} height={160} data={data}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" interval=\"preserveStartEnd\" />\r\n          <YAxis interval=\"preserveStartEnd\" />\r\n          <Legend />\r\n          <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\r\n          <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" />\r\n        </LineChart>\r\n\r\n        \r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Rechart;","F:\\Rlab\\client\\src\\Components\\Shared\\Navbar\\Navbar.js",["154","155","156","157","158","159","160","161"],"import React, { useEffect, useState } from 'react';\r\nimport logo from '../../../Resorces/logo_RLAB.png';\r\nimport './nav.css';\r\nimport {Link} from 'react-router-dom'\r\nconst Navbar = () => {\r\n    const [show, handleShow] = useState(false)\r\n   \r\n    return (\r\n        <div >\r\n            <nav class={`navbar navbar-expand-lg navbar-dark  navAvatar navBlack`}>\r\n                <div class=\"container-fluid\">\r\n                    <a class=\"navbar-brand\" href=\"#\"><img style={{width:'10%'}} src={logo} alt=\"\"/></a>\r\n                    <button\r\n                        class=\"navbar-toggler\"\r\n                        type=\"button\"\r\n                        data-bs-toggle=\"collapse\"\r\n                        data-bs-target=\"#navbarNav\"\r\n                        aria-controls=\"navbarNav\"\r\n                        aria-expanded=\"false\"\r\n                        aria-label=\"Toggle navigation\">\r\n                        <span class=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                        <ul class=\"navbar-nav ms-auto\">\r\n                            <li class=\"nav-item\">\r\n                                <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                            </li>\r\n                            <li class=\"nav-item\">\r\n                                <a class=\"nav-link\" href=\"#\">Products</a>\r\n                            </li>\r\n                            <li class=\"nav-item\">\r\n                                <a class=\"nav-link\" href=\"#\">About us</a>\r\n                            </li>\r\n                            <li class=\"nav-item\">\r\n                                <a class=\"nav-link\" href=\"#\">contract us</a>\r\n                            </li>\r\n                            <li class=\"nav-item\">\r\n                                <Link class=\"nav-link\" to=\"/userHome\">Dashboard</Link>\r\n                            </li>\r\n                            \r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navbar;","F:\\Rlab\\client\\src\\Components\\Shared\\Navbar.js",["162","163"],"F:\\Rlab\\client\\src\\Components\\Home\\Locations\\Locations.js",["164"],"F:\\Rlab\\client\\src\\Components\\Home\\User\\User.js",["165","166","167"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport './user.css';\r\nimport '../../../responsive.css';\r\nimport UserForm from './UserForm';\r\nimport {userContext} from '../../../App';\r\nimport UserData from './UserData';\r\n\r\nconst User = (props) => {\r\n   const data = props.data;\r\n    const [click, setClick] = useState({\r\n        clickToUser: true,\r\n        clickToFrom:false\r\n    });\r\n    const handleClick = () => {\r\n        const newClick = {...click}\r\n        newClick.clickToFrom = true;\r\n        newClick.clickToUser = false;\r\n        setClick(newClick)\r\n    }\r\n    const [user, setUser]  = useContext(userContext);\r\n    \r\n    return (\r\n        <div className='mt-5 text-center'>\r\n        \r\n          {click.clickToUser && <div>\r\n            \r\n                <div className=\"user-map\">\r\n                    {\r\n                        data.map(data =>{ return  <UserData  data={data}/>})\r\n                    }\r\n                </div>\r\n            \r\n            <div className=\"button d-flex justify-content-end\">\r\n                <button className=\"btn btn-primary\" onClick={handleClick}>Add User</button>\r\n            </div> \r\n           </div>}\r\n            <div>\r\n                {click.clickToFrom && <UserForm/>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default User;","F:\\Rlab\\client\\src\\Components\\Home\\Command\\Command.js",[],"F:\\Rlab\\client\\src\\Components\\Carusel\\Carusel.js",[],"F:\\Rlab\\client\\src\\Components\\Footer\\Footer.js",[],"F:\\Rlab\\client\\src\\Components\\Card\\Card.js",[],"F:\\Rlab\\client\\src\\Components\\Home\\Devices\\Devices.js",["168"],"import React, { useState } from 'react';\r\nimport firebase from 'firebase';\r\nimport 'firebase/firestore';\r\nimport './Devices.css';\r\nimport '../../../responsive.css';\r\nimport { useEffect } from 'react';\r\n\r\n\r\nif (!firebase.apps.length) {\r\n    firebase.initializeApp({\r\n        apiKey: \"AIzaSyA47b6Rx0RioZApSMcyDooUmOpQFFs9WLE\",\r\n  authDomain: \"test1-68872.firebaseapp.com\",\r\n  projectId: \"test1-68872\",\r\n  storageBucket: \"test1-68872.appspot.com\",\r\n  messagingSenderId: \"504703093399\",\r\n  appId: \"1:504703093399:web:50a89636d428ac8bd2f7d2\"\r\n    });\r\n }else {\r\n    firebase.app(); // if already initialized, use that one\r\n }\r\n\r\nconst db = firebase.firestore();\r\n\r\nconst Devices = () => {\r\n    const [devicesData, setDevicesData] = useState({\r\n        model:'',\r\n        SerialNumber:'',\r\n        Commission:'',\r\n        alarm1:'',\r\n        alarm2:'',\r\n        format:''\r\n    });\r\n    const handleOnChangeSelect = (event) => {\r\n        setDevicesData({format: event.target.value})\r\n    }\r\n    const handleChange = (event) => {\r\n        const newDevices = {...devicesData};\r\n        newDevices[event.target.name] = event.target.value;\r\n        setDevicesData(newDevices);\r\n        \r\n    }\r\n    const handleSubmit = (e) => {\r\n        db.collection(\"Devices\").add(devicesData)\r\n        .then((docRef) => {\r\n           \r\n        })\r\n        .catch((error) => {\r\n            \r\n        });\r\n        db.collection(devicesData.model).add(devicesData)\r\n        .then((docRef) => {\r\n           \r\n        })\r\n        .catch((error) => {\r\n            \r\n        });\r\n        e.preventDefault()\r\n        \r\n    }\r\n    \r\n    \r\n    return (\r\n        <div className=\"d-flex justify-content-center align-items-center mt-5 mb-5 device-main-container\">\r\n            <form action=\"\" onSubmit={handleSubmit} className=\"device-container\">\r\n            <div className='d-flex mb-3 device-div-container' >\r\n                    <label htmlFor=\"format\" className='text-dark interface-name device-title' style={{marginRight:'105.5px'}}>Formate</label>\r\n                    <select id=\"format\" className='form-control device-selector device-input' onChange={handleOnChangeSelect}>\r\n                        <option value=\"ENER01\" >ENER01</option>\r\n                        <option value=\"RTD01\">RTD01</option>\r\n                        <option value=\"GTY01\">GTY01</option>\r\n                    </select>\r\n            </div>\r\n                <div className=\"d-flex mb-3 device-div-container\">\r\n                    <label className=\"text-dark device-title\" htmlFor=\"modelOfDevice\" style={{marginRight:'64px'}}>Device Model</label>\r\n                    <input className=\"device-input\" type=\"text\" id='modeOfDevice' placeholder='Meter_ABC' name=\"model\" onChange={handleChange}/>\r\n                </div>\r\n                <div className=\"d-flex mb-3 device-div-container\">\r\n                    <label className=\"text-dark device-title\" htmlFor=\"serialNumber\" style={{marginRight:'58px'}}>Serial Number</label>\r\n                    <input className=\"device-input\" type=\"text\" id='serialNumber' placeholder='ABC012319' name=\"SerialNumber\" onChange={handleChange}/>\r\n                </div>\r\n                <div className=\"d-flex mb-3 device-div-container\">\r\n                    <label className=\"text-dark device-title\" htmlFor=\"commissioningDate\" style={{marginRight:'11px'}}>Commissioning Date</label>\r\n                    <input className=\"device-input\" type=\"text\" id='commissioningDate' placeholder='1699992929202' name=\"Commission\" onChange={handleChange}/>\r\n                </div>\r\n                <div className=\"d-flex mb-3 device-div-container\">\r\n                    <label className=\"text-dark device-title\" htmlFor=\"Var01\" style={{marginRight:'27px'}}>Level_Alarm_var01</label>\r\n                    <input className=\"device-input\" type=\"text\" id='Var01' placeholder='30.5' name=\"alarm1\" onChange={handleChange}/>\r\n                </div>\r\n                <div className=\"d-flex mb-3 device-div-container\">\r\n                    <label className=\"text-dark device-title\" htmlFor=\"Var02\" style={{marginRight:'27px'}}>Level_Alarm_var02</label>\r\n                    <input className=\"device-input\" type=\"text\" id='Var02' placeholder='30.5' name='alarm2' onChange={handleChange}/>\r\n                </div>\r\n                <div className=\"device-button-container\">\r\n                    <button className=\"btn btn-primary device-button\" style={{marginLeft:'65%'}}>Create/Save</button>\r\n                </div>\r\n                \r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Devices;","F:\\Rlab\\client\\src\\Components\\Home\\Locations\\DeveiceMeter.js",["169","170","171","172","173"],"import React from 'react';\r\nimport './DeviceMeter.css';\r\nimport '../../../responsive.css';\r\nimport { Line } from 'react-chartjs-2'\r\n\r\nimport { useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\nconst DeveiceMeter = (props) => {\r\n    const { DeviceID, voltage01, voltage02, voltage03, dateSocket, voltage04, vBat, txPower, rssiGateway, nMedicion, msActivo, longitude, latitude, current01, rassiGateWay, resistance, temperature, nMessages } = props.data;\r\n    const { id } = useParams();\r\n    const [voltageData, setVoltageData] = useState({\r\n        voltageName: '',\r\n        voltage: ''\r\n    });\r\n\r\n    \r\n\r\n    const [fetchDevice, setFetchDeviceData] = useState({\r\n        \r\n    });\r\n   \r\n    const [deviceId, setDeviceID] = useState(true)\r\n  \r\n  \r\n\r\n    const handleVoltage01 = () => {\r\n        const newVoltage = { ...voltageData };\r\n        newVoltage.voltage = voltage01;\r\n        newVoltage.voltageName = 'voltage01'\r\n        setVoltageData(newVoltage);\r\n    };\r\n    const handleVlotage02 = () => {\r\n        const newVoltage = { ...voltageData };\r\n        newVoltage.voltage = voltage02;\r\n        newVoltage.voltageName = 'voltage02'\r\n        setVoltageData(newVoltage);\r\n    }\r\n    const handleVolage03 = () => {\r\n        const newVoltage = { ...voltageData };\r\n        newVoltage.voltage = voltage03;\r\n        newVoltage.voltageName = 'voltage03'\r\n        setVoltageData(newVoltage);\r\n    }\r\n    const handleVlotage04 = () => {\r\n        const newVoltage = { ...voltageData };\r\n        newVoltage.voltage = voltage04;\r\n        newVoltage.voltageName = 'voltage04'\r\n        setVoltageData(newVoltage);\r\n    }\r\n    // unixtimestamp\r\n    // let mil = dateSocket;\r\n   function clock(){\r\n    const newData = {...fetchDevice}\r\n    let unixTimeStamp = new Date() - 5*60000;\r\n    let mil = unixTimeStamp - 7*24*60*60000;\r\n    let date = new Date(mil);\r\n    newData.localString = date.toLocaleDateString();\r\n    newData.localTIme = date.toLocaleTimeString()\r\n    \r\n    newData.seconds = Math.floor((unixTimeStamp - (unixTimeStamp))/1000);\r\n    newData.minutes = (newData.seconds / 60) | 0;\r\n     \r\n\r\n    newData.hours = (newData.minutes / 60) | 0;\r\n     \r\n\r\n    newData.days = (newData.hours/ 24) | 0;\r\n     \r\n\r\n    newData.mainWeek = (newData.days / 7) | 0;\r\n    \r\n    setFetchDeviceData(newData)\r\n    // console.log({seconds},{minutes},{hours}, {days}, {mainWeek});\r\n    // console.log({localString})\r\n   }\r\n\r\n    \r\n    setInterval(() => clock(), 1000)\r\n    return (\r\n        <div className=\"container\">\r\n            <h1 className=\"meter-text\">Meter</h1>\r\n\r\n            <div className=\"device-meter-container\">\r\n                {voltage01 >= 0 && <div>\r\n                    <div className=\"row thead\">\r\n                        <div className=\"col-md-4 meter-col\">\r\n                            <p>Date</p>\r\n                        </div>\r\n                        <div className=\"col-md-1 meter-col\">\r\n                            <p>Vcc 1</p>\r\n                        </div>\r\n                        <div className=\"col-md-1 meter-col\">\r\n                            <p>Vcc 2</p>\r\n                        </div>\r\n                        <div className=\"col-md-1 meter-col\">\r\n                            <p>Vcc 3</p>\r\n                        </div>\r\n                        <div className=\"col-md-1 meter-col\">\r\n                            <p>Vcc 4</p>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-3 meter-col\">\r\n                            <p>Current 1</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row tbody\">\r\n                        <div className=\"col-md-4 meter-data\" data-content=\"Date\">\r\n                            {/* <p>{localString}</p> */}\r\n                        </div>\r\n                        <div className=\"col-md-1 meter-data\" data-content=\"Vcc 1\" onClick={handleVoltage01}>\r\n                            <p>{voltage01}V</p>\r\n                        </div>\r\n                        <div className=\"col-md-1 meter-data\" data-content=\"Vcc 2\" onClick={handleVlotage02}>\r\n                            <p>{voltage02}V</p>\r\n                        </div>\r\n                        <div className=\"col-md-1 meter-data\" data-content=\"Vcc 3\" onClick={handleVolage03}>\r\n                            <p>{voltage03}V</p>\r\n                        </div>\r\n                        <div className=\"col-md-1 meter-data\" data-content=\"Vcc 3\" onClick={handleVlotage04}>\r\n                            <p>{voltage04}V</p>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-3 meter-data\" data-content=\"Current 1\">\r\n                            <p>{current01}A</p>\r\n                        </div>\r\n                    </div>\r\n                </div>}\r\n                <div>\r\n                    <div className=\"row my-2 status-container\">\r\n                        <div className=\"col-xl-3 col-md-2 text-start p-0 status-data-container\">\r\n                            <span className=\"status-title\">Status:</span>\r\n                            <span>Ok</span>\r\n                        </div>\r\n                        <div className=\"col-xl-6 col-md-8 p-0 status-mid-data\">\r\n                            <span className=\"status-title\">Last connection:</span>\r\n                            <span className=\"status-data-date\">{fetchDevice.localString}</span>\r\n                            <span>{fetchDevice.localTIme}</span>\r\n                        </div>\r\n                        <div className=\"col-xl-3 col-md-2 text-end p-0 status-data-container\">\r\n                            <span className=\"status-title\">Vbat:</span>\r\n                            <span>{vBat}V</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* {voltage01 >= 0 && <div className=\"chart-container\">\r\n                    <LineChart width={800} height={150} className=\"charts\" data={data}>\r\n                        <XAxis dataKey=\"name\"/>\r\n                        <YAxis/>\r\n                        <CartesianGrid stroke=\"#eee\" strokeDasharray=\"5 5\"/>\r\n                        <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" />\r\n                        <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#82ca9d\" />\r\n                    </LineChart> \r\n            </div>} */}\r\n                <Line height={100} width={400} data={{\r\n                    labels: [voltageData.voltageName, 'voltage01', 'voltage02', 'voltage03', 'voltage04'],\r\n                    datasets: [{\r\n                        label: 'Voltage Data',\r\n                        data: [voltageData.voltage, voltage01, voltage02, voltage03, voltage04],\r\n                        backgroundColor: [\r\n                            'rgba(255, 99, 132, 0.2)',\r\n                            'rgba(54, 162, 235, 0.2)',\r\n                            'rgba(255, 206, 86, 0.2)',\r\n                            'rgba(75, 192, 192, 0.2)',\r\n                            'rgba(153, 102, 255, 0.2)',\r\n                            'rgba(255, 159, 64, 0.2)'\r\n                        ],\r\n                        borderColor: [\r\n                            'rgba(255, 99, 132, 1)',\r\n                            'rgba(54, 162, 235, 1)',\r\n                            'rgba(255, 206, 86, 1)',\r\n                            'rgba(75, 192, 192, 1)',\r\n                            'rgba(153, 102, 255, 1)',\r\n                            'rgba(255, 159, 64, 1)'\r\n                        ],\r\n                        borderWidth: 1\r\n                    }]\r\n                }} />\r\n                <div className=\"chart-btn\">\r\n                    <ul className=\"d-flex justify-content-end chart-lists\">\r\n                        \r\n                        <li className=\"bg-primary chart-list\">{fetchDevice.mainWeek}W</li>\r\n                        <li className=\"bg-primary chart-list\">{fetchDevice.days}D</li>\r\n                        <li className=\"bg-primary chart-list\">{fetchDevice.hours}H</li>\r\n                        <li className=\"bg-primary chart-list\">{fetchDevice.minutes}M</li>\r\n                        <li className=\"bg-primary chart-list\">{fetchDevice.seconds}S</li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"device-meter-scroll\">\r\n                    <div>\r\n                        <div>\r\n                            <p className=\"row title-control\">Control</p>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-xl-3 col-lg-3\">\r\n                                    <p className=\"control-input-text\">Period :</p>\r\n                                </div>\r\n                                <div className=\"col-xl-5 col-lg-5 control-input-box\"><input className=\"control-input-number\" type=\"number\" value={latitude} /></div>\r\n                                <div className=\"col-xl-4 col-lg-4\"></div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-xl-3 col-lg-3\">\r\n                                    <p className=\"control-input-text\">Freq :</p>\r\n                                </div>\r\n                                <div className=\"col-xl-5 col-lg-5 control-input-box\"><input className=\"control-input-number\" type=\"number\" value={longitude} /></div>\r\n                                <div className=\"col-xl-4 col-lg-4\"></div>\r\n                            </div>\r\n                            <div className=\"meter-button d-flex justify-content-end\">\r\n                                <div className=\"btn btn-primary button1\"><span>INT CYCLE</span></div>\r\n                                <div className=\"btn btn-primary button2\"><span>ON / OFF</span></div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <ul className=\"row device-meter-list-container\">\r\n                            {txPower >= 0 && <li className=\" text-start text-light device-list\"><h5 className=\"device-meter-list\" htmlFor=\"\">txPower :</h5> {txPower}</li>}\r\n                            {rssiGateway >= 0 && <li className=\" text-start text-light device-list\"><h5 className=\"device-meter-list\" htmlFor=\"\">rssiGateway :</h5> {rssiGateway}</li>}\r\n                            {nMedicion >= 0 && <li className=\" text-start text-light device-list\"><h5 className=\"device-meter-list\" htmlFor=\"\">nMedicion :</h5> {nMedicion}</li>}\r\n                            {msActivo >= 0 && <li className=\"text-start text-light device-list\"><h5 className=\"device-meter-list\" htmlFor=\"\">msActivo :</h5> {msActivo}</li>}\r\n                        </ul>\r\n                        <ul className=\"row d-flex justify-content-lg-around text-light device-meter-list-container\">\r\n                            {rassiGateWay >= 0 && <li className=\" text-start text-light device-list\"><h5 className=\"device-meter-list\" htmlFor=\"\">rassiGateWay :</h5> {rassiGateWay}</li>}\r\n                            {resistance >= 0 && <li className=\" text-start text-light device-list\"><h5 className=\"device-meter-list\" htmlFor=\"\">resistance :</h5> {resistance}</li>}\r\n                            {temperature >= 0 && <li className=\" text-start text-light device-list\"><h5 className=\"device-meter-list\" htmlFor=\"\">temperature :</h5> {temperature}</li>}\r\n                            {nMessages >= 0 && <li className=\" text-start text-light device-list\"><h5 className=\"device-meter-list\" htmlFor=\"\">nMessages :</h5> {nMessages}</li>}\r\n                        </ul>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DeveiceMeter;","F:\\Rlab\\client\\src\\Components\\Home\\Locations\\LocationUser.js",["174"],"import React, { useEffect, useState } from 'react';\r\nimport DevicesForm from './DevicesForm';\r\nimport logo1 from '../../../Resorces/logo1.png';\r\nimport logo2 from '../../../Resorces/logo2.png';\r\nimport logo3 from '../../../Resorces/logo3.png';\r\nimport './LocationStyle.css';\r\nimport '../../../responsive.css';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\nif (!firebase.apps.length) {\r\n    firebase.initializeApp({\r\n        apiKey: \"AIzaSyBXXL_2svIOIRYEArzq7Ai8G8xLQTTTqrU\",\r\n  authDomain: \"iot-comm.firebaseapp.com\",\r\n  projectId: \"iot-comm\",\r\n  storageBucket: \"iot-comm.appspot.com\",\r\n  messagingSenderId: \"707981957974\",\r\n  appId: \"1:707981957974:web:5e3ecb242770f42e7b14f7\",\r\n  measurementId: \"G-VFR4XEJGHK\"\r\n    });\r\n }else {\r\n    firebase.app(); // if already initialized, use that one\r\n }\r\n\r\nconst db = firebase.firestore();\r\n\r\nconst LocationUser = () => {\r\n    const [click, setClick] = useState({\r\n        locationCLick:true,\r\n        terminal: false\r\n    })\r\n    const handleTerminal = () => {\r\n        const newClick = {...click};\r\n        newClick.locationCLick = false;\r\n        newClick.terminal = true;\r\n        setClick(newClick)\r\n    }\r\n    const [dbUserData, setDbUserData] = useState();\r\n    const [loading, setLoading] = useState(true)\r\n    \r\n    useEffect(() => {\r\n        const getDataFirebase = [];\r\n        const userDb = db.collection(\"Devices\").onSnapshot((querySnapshot) => {\r\n            querySnapshot.forEach((doc) => {\r\n              getDataFirebase.push({...doc.data(), key:doc.id});\r\n            });\r\n            setDbUserData(getDataFirebase);\r\n            setLoading(false)\r\n        });\r\n        \r\n       return userDb;\r\n    }, [dbUserData]);\r\n    \r\n    return (\r\n        <div className=\"card-main-container\">\r\n           {click.locationCLick && <div className='row'>\r\n           <div className=\"col-md-4 mb-3\">\r\n            <div class=\"card card-container\" onClick={handleTerminal}>\r\n                <img src={logo1} class=\"card-img-top\" alt=\"...\"/>\r\n                <div class=\"card-body\">\r\n                   <h6 className=\"card-text-h6\">Location 1</h6>\r\n                   <p className=\"card-text-p\">Motor Pump 5kV</p>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            <div className=\"col-md-4 mb-3\">\r\n            <div class=\"card card-container\" onClick={handleTerminal}>\r\n                <img src={logo3} class=\"card-img-top\" alt=\"...\"/>\r\n                <div class=\"card-body\">\r\n                   <h6 className=\"card-text-h6\">Location 2</h6>\r\n                   <p className=\"card-text-p\">Truck FLVC01</p>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            <div className=\"col-md-4 mb-3\">\r\n            <div class=\"card card-container\" onClick={handleTerminal}>\r\n                <img src={logo2} class=\"card-img-top\" alt=\"...\"/>\r\n                <div class=\"card-body\">\r\n                   <h6 className=\"card-text-h6\">Location 3</h6>\r\n                   <p className=\"card-text-p\">Dust Fun 4HP</p>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            <div className=\"col-md-4 mb-3\">\r\n            <div class=\"card card-container\" onClick={handleTerminal}>\r\n                <img src={logo3} class=\"card-img-top\" alt=\"...\"/>\r\n                <div class=\"card-body\">\r\n                   <h6 className=\"card-text-h6\">Location 4</h6>\r\n                   <p className=\"card-text-p\">Truck FLHR09</p>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            <div className=\"col-md-4 mb-3\">\r\n            <div class=\"card card-container\" onClick={handleTerminal}>\r\n                <img src={logo1} class=\"card-img-top\" alt=\"...\"/>\r\n                <div class=\"card-body\">\r\n                   <h6 className=\"card-text-h6\">Location 6</h6>\r\n                   <p className=\"card-text-p\">Motor Pump 2kV</p>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            {/* <div className=\"col-md-4 mb-3\">\r\n            <div class=\"card\" style={{width: '10rem'}} onClick={handleTerminal}>\r\n                <img src=\"https://www.clipartmax.com/png/middle/301-3017435_icon-delivery-vector-image-delivery-truck-vector-png.png\" class=\"card-img-top\" alt=\"...\"/>\r\n                <div class=\"card-body\">\r\n                   <h6>Location 6</h6>\r\n                </div>\r\n            </div>\r\n            </div> */}\r\n           </div>}\r\n            {click.terminal && <DevicesForm data={dbUserData}/>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LocationUser;","F:\\Rlab\\client\\src\\Components\\Home\\User\\UserForm.js",["175"],"import React, { useEffect, useState } from 'react';\r\nimport './user.css'\r\n\r\nimport firebase from 'firebase';\r\nimport 'firebase/firestore';\r\n\r\n\r\nif (!firebase.apps.length) {\r\n    firebase.initializeApp({\r\n        apiKey: \"AIzaSyBXXL_2svIOIRYEArzq7Ai8G8xLQTTTqrU\",\r\n  authDomain: \"iot-comm.firebaseapp.com\",\r\n  projectId: \"iot-comm\",\r\n  storageBucket: \"iot-comm.appspot.com\",\r\n  messagingSenderId: \"707981957974\",\r\n  appId: \"1:707981957974:web:5e3ecb242770f42e7b14f7\",\r\n  measurementId: \"G-VFR4XEJGHK\"\r\n    });\r\n }else {\r\n    firebase.app(); // if already initialized, use that one\r\n }\r\n\r\nconst db = firebase.firestore();\r\n\r\nconst UserForm = () => {\r\n    const [userInfo, setuserInfo] = useState({\r\n        email:'',\r\n        name:'',\r\n        position:'',\r\n        Role:'admin',\r\n        Uid:'',\r\n    });\r\n    const [error, setError] = useState({\r\n        notError: true\r\n    })\r\n    const [userUpdate, setUserUpdate] = useState([])\r\n    const handleOnchange = (event) => {\r\n        const newUserInfo = {...userInfo};\r\n        newUserInfo[event.target.name] = event.target.value;\r\n        const RandomId = Math.random() * 100000000000000000000000000000000000000;\r\n        newUserInfo.Uid = RandomId;\r\n        setuserInfo(newUserInfo)\r\n    }\r\n    const handleOnChangeSelect = (event) => {\r\n        setuserInfo({Role: event.target.value})\r\n    };\r\n    const handleSubmit = (e) => {\r\n        db.collection(\"user\").add(userInfo)\r\n        .then((docRef) => {\r\n           \r\n        })\r\n        .catch((error) => {\r\n            \r\n        });\r\n        e.preventDefault();\r\n    }\r\n    \r\n    function arrayFunc(arr,key) {\r\n        let resultArray = [];\r\n        for(let i = 0; i < arr.length; i++){\r\n            if(arr[i].email === key){\r\n                resultArray = arr[i];\r\n            }\r\n            \r\n        }\r\n       \r\n        return resultArray\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        const userDb =  db.collection(\"user\").onSnapshot((querySnapshot) => {\r\n            const getDataFirebase = [];\r\n            querySnapshot.forEach((doc) => {\r\n              getDataFirebase.push({...doc.data(), key:doc.id});\r\n            });\r\n            \r\n            if(getDataFirebase.length > 0){\r\n                const functionalArray = arrayFunc(getDataFirebase, userInfo.email);\r\n                setUserUpdate(functionalArray);\r\n                \r\n                \r\n               \r\n            }\r\n        });\r\n        return userDb;\r\n    },[userInfo]);\r\n    useEffect(() => {\r\n        if(userUpdate.email === userInfo.email){\r\n            const newError = {...error}\r\n            newError.notError = false;\r\n            setError(newError)\r\n        }\r\n        else if(userUpdate.email != userInfo.email){\r\n            const newError = {...error}\r\n            newError.notError = true;\r\n            setError(newError)\r\n        }\r\n    }, [userInfo, userUpdate,error])\r\n    \r\n    return (\r\n        <div style={{width:'50%', margin:'2% auto'}} className='text-center'>\r\n            <form action=\"\" onSubmit={handleSubmit}>\r\n            <div className='d-flex justiy-content-around mb-4' >\r\n                    <label htmlFor=\"Role\"  className='me-5  text-light interface-name'><h5>Role</h5></label>\r\n                    <select id=\"role\" className='form-control' onChange={handleOnChangeSelect}>\r\n                        <option value=\"admin\" >Admin</option>\r\n                        <option value=\"oparetors\">Oparetors</option>\r\n                        <option value=\"viewers\">Viewers</option>\r\n                    </select>\r\n                </div>\r\n                <div className='d-flex justiy-content-around mb-4'>\r\n                    <label htmlFor=\"userEmail\"  className='me-5 text-light interface-name'><h5>Email</h5></label>\r\n                    <input type=\"email\" id='userEmail' className='form-control' placeholder='Enter Your Email' name=\"email\" onChange={handleOnchange}/>\r\n                </div>\r\n                <div className='d-flex justiy-content-around mb-4'>\r\n                    <label htmlFor=\"name\" className='me-5 text-light interface-name'><h5>Name</h5></label>\r\n                    <input type=\"text\" id='name' placeholder='Enter Your Name' className='form-control' name=\"name\" onChange={handleOnchange}/>\r\n                </div>\r\n                <div className='d-flex justiy-content-around mb-4'>\r\n                    <label htmlFor=\"position\"  className='me-5 text-light interface-name'><h5>Position</h5></label>\r\n                    <input type=\"text\" id='position' placeholder='Enter Your position' className='form-control' name=\"position\" onChange={handleOnchange}/>\r\n                </div>\r\n                {error.notError && <button className=\"btn btn-primary create-button\" type=\"submit\">Create/Save</button>}\r\n                {error.notError===false && <p className=\"text-danger\">This email user Already created. please try with another email.</p>}\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserForm;","F:\\Rlab\\client\\src\\Components\\Home\\User\\UserData.js",[],"F:\\Rlab\\client\\src\\Components\\Home\\Locations\\DevicesForm.js",["176"],"import React, { useState } from 'react';\r\nimport './Location.css';\r\n\r\nimport DevicesData from './DevicesData';\r\n\r\n\r\nconst DevicesForm = (props) => {\r\n    const data = props.data;\r\n\r\n    \r\n   \r\n\r\n  \r\n    return (\r\n            <div>\r\n               <div className=\"container device-form-container\">\r\n                \r\n                {\r\n                    data.map(item =>  { return <DevicesData data={item}/> })\r\n                  }\r\n                </div>\r\n\r\n                <div className=\"button d-flex justify-content-end deviceFrom-location-button\">\r\n                    <button className=\"btn btn-primary\">Edit Location</button>\r\n                </div>    \r\n          \r\n          \r\n            </div>\r\n        \r\n    );\r\n};\r\n\r\nexport default DevicesForm;","F:\\Rlab\\client\\src\\Components\\Home\\Locations\\DevicesData.js",["177","178","179","180"],"import React, { useContext, useState } from 'react';\r\nimport { userContext } from '../../../App';\r\nimport './DeviceMeter.css';\r\nimport '../../../responsive.css';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n  } from \"react-router-dom\";\r\nconst DevicesData = (props) => {\r\n    const [user, setUser] = useContext(userContext)\r\n    const {model,key, format} = props.data;\r\n    const [edit, setEdit] = useState({\r\n        editable:true,\r\n        clickEdit: false\r\n    })\r\n    const handleEdit = () => {\r\n        const newUser = {...edit};\r\n        newUser.editable = false;\r\n        newUser.clickEdit = true;\r\n        setEdit(newUser);\r\n        const newUserInfo = {...user};\r\n        newUserInfo.deviceID = key;\r\n        setUser(newUserInfo);\r\n        \r\n     };\r\n    const handleSelect = (e) => {\r\n        const newUser = {...user};\r\n        newUser.notClick = false;\r\n        newUser.click = true;\r\n        newUser.deviceID = key;\r\n        setUser(newUser);\r\n        e.preventDefault()\r\n    } \r\n    \r\n    return (\r\n        <div>\r\n            <div className=\"clients d-flex justify-content-evenly mb-5\">\r\n                    {edit.editable && <div className=\"form-name\"><p className=\"form-name-p\">{model}</p></div>}\r\n                    {edit.clickEdit && <input type=\"text\" placeholder='edit your Meter' name='one'/>}\r\n                    <button className=\"btn btn-dark btnEdit\" onClick={handleEdit}>Edit</button>\r\n                    <Link to={`/${format}/${key}`} className=\"btn btn-primary btnArea\">Select</Link>\r\n                </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DevicesData;","F:\\Rlab\\client\\src\\Components\\Home\\DeviceDashBoard\\TemporaryTest.js",[],"F:\\Rlab\\client\\src\\Components\\Home\\Devices\\MainDevices.js",[],"F:\\Rlab\\client\\src\\Components\\Home\\Locations\\MainLocation.js",[],"F:\\Rlab\\client\\src\\Components\\Home\\Command\\MainCommand.js",[],{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","severity":1,"message":"186","line":7,"column":3,"nodeType":"187","messageId":"188","endLine":7,"endColumn":7},{"ruleId":"185","severity":1,"message":"189","line":17,"column":8,"nodeType":"187","messageId":"188","endLine":17,"endColumn":15},{"ruleId":"185","severity":1,"message":"190","line":6,"column":18,"nodeType":"187","messageId":"188","endLine":6,"endColumn":25},{"ruleId":"185","severity":1,"message":"191","line":44,"column":12,"nodeType":"187","messageId":"188","endLine":44,"endColumn":19},{"ruleId":"185","severity":1,"message":"192","line":25,"column":11,"nodeType":"187","messageId":"188","endLine":25,"endColumn":20},{"ruleId":"185","severity":1,"message":"193","line":26,"column":11,"nodeType":"187","messageId":"188","endLine":26,"endColumn":23},{"ruleId":"185","severity":1,"message":"190","line":31,"column":18,"nodeType":"187","messageId":"188","endLine":31,"endColumn":25},{"ruleId":"185","severity":1,"message":"191","line":34,"column":12,"nodeType":"187","messageId":"188","endLine":34,"endColumn":19},{"ruleId":"194","severity":1,"message":"195","line":60,"column":8,"nodeType":"196","endLine":60,"endColumn":10,"suggestions":"197"},{"ruleId":"185","severity":1,"message":"198","line":9,"column":22,"nodeType":"187","messageId":"188","endLine":9,"endColumn":28},{"ruleId":"185","severity":1,"message":"199","line":10,"column":5,"nodeType":"187","messageId":"188","endLine":10,"endColumn":11},{"ruleId":"185","severity":1,"message":"200","line":11,"column":5,"nodeType":"187","messageId":"188","endLine":11,"endColumn":10},{"ruleId":"185","severity":1,"message":"186","line":12,"column":5,"nodeType":"187","messageId":"188","endLine":12,"endColumn":9},{"ruleId":"185","severity":1,"message":"201","line":1,"column":17,"nodeType":"187","messageId":"188","endLine":1,"endColumn":30},{"ruleId":"185","severity":1,"message":"202","line":2,"column":56,"nodeType":"187","messageId":"188","endLine":2,"endColumn":63},{"ruleId":"185","severity":1,"message":"203","line":1,"column":17,"nodeType":"187","messageId":"188","endLine":1,"endColumn":26},{"ruleId":"185","severity":1,"message":"204","line":6,"column":12,"nodeType":"187","messageId":"188","endLine":6,"endColumn":16},{"ruleId":"185","severity":1,"message":"205","line":6,"column":18,"nodeType":"187","messageId":"188","endLine":6,"endColumn":28},{"ruleId":"206","severity":1,"message":"207","line":12,"column":21,"nodeType":"208","endLine":12,"endColumn":54},{"ruleId":"206","severity":1,"message":"207","line":26,"column":33,"nodeType":"208","endLine":26,"endColumn":89},{"ruleId":"206","severity":1,"message":"207","line":29,"column":33,"nodeType":"208","endLine":29,"endColumn":62},{"ruleId":"206","severity":1,"message":"207","line":32,"column":33,"nodeType":"208","endLine":32,"endColumn":62},{"ruleId":"206","severity":1,"message":"207","line":35,"column":33,"nodeType":"208","endLine":35,"endColumn":62},{"ruleId":"185","severity":1,"message":"209","line":25,"column":11,"nodeType":"187","messageId":"188","endLine":25,"endColumn":28},{"ruleId":"185","severity":1,"message":"210","line":34,"column":11,"nodeType":"187","messageId":"188","endLine":34,"endColumn":30},{"ruleId":"185","severity":1,"message":"190","line":31,"column":18,"nodeType":"187","messageId":"188","endLine":31,"endColumn":25},{"ruleId":"185","severity":1,"message":"203","line":1,"column":29,"nodeType":"187","messageId":"188","endLine":1,"endColumn":38},{"ruleId":"185","severity":1,"message":"211","line":20,"column":12,"nodeType":"187","messageId":"188","endLine":20,"endColumn":16},{"ruleId":"185","severity":1,"message":"190","line":20,"column":18,"nodeType":"187","messageId":"188","endLine":20,"endColumn":25},{"ruleId":"185","severity":1,"message":"203","line":6,"column":10,"nodeType":"187","messageId":"188","endLine":6,"endColumn":19},{"ruleId":"185","severity":1,"message":"212","line":11,"column":13,"nodeType":"187","messageId":"188","endLine":11,"endColumn":21},{"ruleId":"185","severity":1,"message":"213","line":11,"column":56,"nodeType":"187","messageId":"188","endLine":11,"endColumn":66},{"ruleId":"185","severity":1,"message":"214","line":12,"column":13,"nodeType":"187","messageId":"188","endLine":12,"endColumn":15},{"ruleId":"185","severity":1,"message":"215","line":24,"column":12,"nodeType":"187","messageId":"188","endLine":24,"endColumn":20},{"ruleId":"185","severity":1,"message":"216","line":24,"column":22,"nodeType":"187","messageId":"188","endLine":24,"endColumn":33},{"ruleId":"185","severity":1,"message":"191","line":39,"column":12,"nodeType":"187","messageId":"188","endLine":39,"endColumn":19},{"ruleId":"217","severity":1,"message":"218","line":93,"column":34,"nodeType":"219","messageId":"220","endLine":93,"endColumn":36},{"ruleId":"185","severity":1,"message":"221","line":1,"column":17,"nodeType":"187","messageId":"188","endLine":1,"endColumn":25},{"ruleId":"185","severity":1,"message":"198","line":6,"column":22,"nodeType":"187","messageId":"188","endLine":6,"endColumn":28},{"ruleId":"185","severity":1,"message":"199","line":7,"column":5,"nodeType":"187","messageId":"188","endLine":7,"endColumn":11},{"ruleId":"185","severity":1,"message":"200","line":8,"column":5,"nodeType":"187","messageId":"188","endLine":8,"endColumn":10},{"ruleId":"185","severity":1,"message":"222","line":28,"column":11,"nodeType":"187","messageId":"188","endLine":28,"endColumn":23},"no-native-reassign",["223"],"no-negated-in-lhs",["224"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Command' is defined but never used.","'setUser' is assigned a value but never used.","'loading' is assigned a value but never used.","'errorCode' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'menu'. Either include it or remove the dependency array.","ArrayExpression",["225"],"'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'PureComponent' is defined but never used.","'Tooltip' is defined but never used.","'useEffect' is defined but never used.","'show' is assigned a value but never used.","'handleShow' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'handleDeviceClick' is assigned a value but never used.","'handleLocationClick' is assigned a value but never used.","'user' is assigned a value but never used.","'DeviceID' is assigned a value but never used.","'dateSocket' is assigned a value but never used.","'id' is assigned a value but never used.","'deviceId' is assigned a value but never used.","'setDeviceID' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useState' is defined but never used.","'handleSelect' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"226","fix":"227"},"Update the dependencies array to be: [menu]",{"range":"228","text":"229"},[1988,1990],"[menu]"]