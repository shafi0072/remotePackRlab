[{"E:\\Shafi\\remotePackRlab\\src\\index.js":"1","E:\\Shafi\\remotePackRlab\\src\\reportWebVitals.js":"2","E:\\Shafi\\remotePackRlab\\src\\App.js":"3","E:\\Shafi\\remotePackRlab\\src\\Components\\PrivateRoute\\PrivateRoute.js":"4","E:\\Shafi\\remotePackRlab\\src\\Components\\Home\\UserHome\\UserHome.js":"5","E:\\Shafi\\remotePackRlab\\src\\Components\\Login\\Login.js":"6","E:\\Shafi\\remotePackRlab\\src\\Components\\Home\\UserHome\\Rechart.js":"7","E:\\Shafi\\remotePackRlab\\src\\Components\\Login\\firebase.config.js":"8","E:\\Shafi\\remotePackRlab\\src\\Components\\Home\\User\\User.js":"9","E:\\Shafi\\remotePackRlab\\src\\Components\\Shared\\Navbar.js":"10","E:\\Shafi\\remotePackRlab\\src\\Components\\Home\\Devices\\Devices.js":"11","E:\\Shafi\\remotePackRlab\\src\\Components\\Home\\Locations\\Locations.js":"12","E:\\Shafi\\remotePackRlab\\src\\Components\\Home\\User\\UserData.js":"13","E:\\Shafi\\remotePackRlab\\src\\Components\\Home\\User\\UserForm.js":"14","E:\\Shafi\\remotePackRlab\\src\\Components\\Home\\Locations\\LocationUser.js":"15","E:\\Shafi\\remotePackRlab\\src\\Components\\Home\\Locations\\DevicesForm.js":"16","E:\\Shafi\\remotePackRlab\\src\\Components\\Home\\Locations\\DeveiceMeter.js":"17","E:\\Shafi\\remotePackRlab\\src\\Components\\Home\\Locations\\DevicesData.js":"18"},{"size":517,"mtime":1624285546831,"results":"19","hashOfConfig":"20"},{"size":375,"mtime":1624285546831,"results":"21","hashOfConfig":"20"},{"size":1059,"mtime":1624285546814,"results":"22","hashOfConfig":"20"},{"size":632,"mtime":1624285546820,"results":"23","hashOfConfig":"20"},{"size":2262,"mtime":1624447359830,"results":"24","hashOfConfig":"20"},{"size":9969,"mtime":1624458114355,"results":"25","hashOfConfig":"20"},{"size":2090,"mtime":1624285546819,"results":"26","hashOfConfig":"20"},{"size":373,"mtime":1624285546820,"results":"27","hashOfConfig":"20"},{"size":1300,"mtime":1624534681626,"results":"28","hashOfConfig":"20"},{"size":2009,"mtime":1624285546821,"results":"29","hashOfConfig":"20"},{"size":3507,"mtime":1624537255764,"results":"30","hashOfConfig":"20"},{"size":4743,"mtime":1624535920978,"results":"31","hashOfConfig":"20"},{"size":765,"mtime":1624534824020,"results":"32","hashOfConfig":"20"},{"size":3535,"mtime":1624374346332,"results":"33","hashOfConfig":"20"},{"size":4630,"mtime":1624532805652,"results":"34","hashOfConfig":"20"},{"size":1042,"mtime":1624532805652,"results":"35","hashOfConfig":"20"},{"size":3911,"mtime":1624285546815,"results":"36","hashOfConfig":"20"},{"size":971,"mtime":1624532805651,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"5la0b5",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"40"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"E:\\Shafi\\remotePackRlab\\src\\index.js",[],["82","83"],"E:\\Shafi\\remotePackRlab\\src\\reportWebVitals.js",[],"E:\\Shafi\\remotePackRlab\\src\\App.js",["84"],"import React, { createContext, useState } from 'react';\r\nimport Login from './Components/Login/Login'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport UserHome from './Components/Home/UserHome/UserHome';\r\nimport PrivateRoute from './Components/PrivateRoute/PrivateRoute';\r\nexport const userContext = createContext()\r\nconst App = () => {\r\n  const [user, setUser] = useState({\r\n    isSignedIn: false,\r\n    name: \"\",\r\n    email: \"\",\r\n    ConfirmPassword: \"\",\r\n    photoURL: \"\",\r\n    error: \"\",\r\n    success: false,\r\n    LoggedInUser: true,\r\n    newUser: false,\r\n    userHome: true,\r\n    user: false,\r\n    devices: false,\r\n    locations: false,\r\n    admin: true,\r\n    viewer:false\r\n  })\r\n  return (\r\n    <userContext.Provider value={[user, setUser]}>\r\n      <Router>\r\n      <Switch>\r\n        <Route path='/auth' component={Login} />\r\n        <PrivateRoute path = '/'>\r\n          <UserHome/>\r\n        </PrivateRoute>\r\n      </Switch>\r\n    </Router>\r\n    </userContext.Provider>\r\n  );\r\n};\r\n\r\nexport default App;","E:\\Shafi\\remotePackRlab\\src\\Components\\PrivateRoute\\PrivateRoute.js",["85"],"import React, { useContext } from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { userContext } from '../../App';\r\n\r\nconst PrivateRoute = ({ children, ...rest }) => {\r\n    const [user, setUser] = useContext(userContext);\r\n    return (\r\n        <div>\r\n            <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n      user.email? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/auth\",\r\n              state: { from: location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;","E:\\Shafi\\remotePackRlab\\src\\Components\\Home\\UserHome\\UserHome.js",["86","87"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport Navbar from '../../Shared/Navbar';\r\nimport './UserHome.css'\r\nimport User from '../User/User'\r\nimport logo from '../../../Resorces/logo_RLAB.png'\r\nimport { userContext } from '../../../App';\r\nimport Rechart from './Rechart';\r\nimport Devices from '../Devices/Devices';\r\nimport Location from '../Locations/Locations';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\nif (!firebase.apps.length) {\r\n    firebase.initializeApp({\r\n        apiKey: \"AIzaSyD_H-N97ETri2j8yI5c-X1YtguoBCWtWAU\",\r\n        authDomain: \"rlab-1f739.firebaseapp.com\",\r\n        projectId: \"rlab-1f739\",\r\n        storageBucket: \"rlab-1f739.appspot.com\",\r\n        messagingSenderId: \"663446234969\",\r\n        appId: \"1:663446234969:web:0cf0efc959e952732c8e48\",\r\n        measurementId: \"G-2EFCRDJGTP\"\r\n    });\r\n }else {\r\n    firebase.app(); // if already initialized, use that one\r\n }\r\n\r\nconst db = firebase.firestore();\r\n\r\nconst UserHome = () => {\r\n   \r\n    const [user, setUser] = useContext(userContext);\r\n    \r\n    const [dbUserData, setDbUserData] = useState();\r\n    const [loading, setLoading] = useState(true)\r\n    \r\n    useEffect(() => {\r\n        const getDataFirebase = [];\r\n        const userDb = db.collection(\"user\").onSnapshot((querySnapshot) => {\r\n            querySnapshot.forEach((doc) => {\r\n              getDataFirebase.push({...doc.data(), key:doc.id});\r\n            });\r\n            setDbUserData(getDataFirebase);\r\n            setLoading(false)\r\n        });\r\n        \r\n       return userDb;\r\n    }, []);\r\n    console.log(dbUserData);\r\n    \r\n    return (\r\n        <div className='row'>\r\n            \r\n            <div className=\"col-md-3\" style={{margin:'0', padding:'0'}}>\r\n                <Navbar/>\r\n            </div>\r\n            <div className=\"col-md-9 backgroundSIDE text-center\">\r\n            <img src={logo} alt=\"\" style={{width:'20%'}} className='mt-5' />\r\n            \r\n                {user.userHome && <Rechart/>}\r\n                {user.user&& user.admin && <User data={dbUserData}/> }\r\n                \r\n                {user.devices && <Devices/>}\r\n                {user.locations && <Location/>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserHome;","E:\\Shafi\\remotePackRlab\\src\\Components\\Login\\Login.js",["88","89"],"import React, { useContext, useState } from 'react';\r\n\r\nimport './Login.css';\r\nimport '../../responsive.css';\r\nimport logo from '../../Resorces/logo_RLAB.png'\r\nimport { userContext } from '../../App';\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport firebaseConfig from './firebase.config';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst Login = () => {\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n\r\n    const { from } = location.state || { from: { pathname: \"/\" } };\r\n\r\n    const [click, setClick] = useState({\r\n        login: true,\r\n        signUp: false\r\n    })\r\n    const handleSignUp = () => {\r\n        const newClick = {...click}\r\n        newClick.login = false;\r\n        newClick.signUp  = true;\r\n        setClick(newClick)\r\n    }\r\n    \r\n    const handleLogin = () => {\r\n        const newClick = {...click}\r\n        newClick.login = true;\r\n        newClick.signUp  = false;\r\n        setClick(newClick)\r\n    };\r\n    const [user, setUser] = useContext(userContext);\r\n    const handleOnChange = (e) => {\r\n        const newUserInfo = {...user}\r\n        newUserInfo[e.target.name] = e.target.value;\r\n        setUser(newUserInfo);\r\n        console.log(user.ConfirmPassword);\r\n    }\r\n    const handleCreateAccount = (e) => {\r\n        firebase.auth().createUserWithEmailAndPassword(user.email, user.ConfirmPassword)\r\n        .then(res => {\r\n            const newUserInfo = {...user};\r\n            newUserInfo.error = \"\";\r\n            newUserInfo.success = true;\r\n            setUser(newUserInfo);\r\n            updateUserInfo(user.name)\r\n        }\r\n        )\r\n        .catch(error => {\r\n            const newUserInfo = {\r\n                ...user\r\n            };\r\n            newUserInfo.error = error.message;\r\n            newUserInfo.success = false;\r\n            setUser(newUserInfo)\r\n\r\n        });\r\n        e.preventDefault()\r\n    }\r\n   const handleSubmitLogin = (e) => {\r\n    firebase.auth().signInWithEmailAndPassword(user.email, user.ConfirmPassword)\r\n    .then(res => {\r\n\r\n        const newUserInfo = {\r\n            ...user\r\n        };\r\n        newUserInfo.email = res.user.email;\r\n        newUserInfo.error = \"\";\r\n        newUserInfo.success = true;\r\n        setUser(newUserInfo);\r\n        history.replace(from);\r\n        if(res.user.email === 'safi29317@gmail.com'){\r\n        const newUser = {...user}\r\n        newUser.admin = true;\r\n        newUser.viewer = false;\r\n        setUser(newUser);\r\n    }\r\n    else{\r\n        const newUser = {...user}\r\n        newUser.admin = false;\r\n        newUser.viewer = true;\r\n        setUser(newUser);\r\n    }\r\n        \r\n    })\r\n    .catch(function (error) {\r\n        const newUserInfo = {\r\n            ...user\r\n        };\r\n        newUserInfo.error = error.message;\r\n        newUserInfo.success = false;\r\n        setUser(newUserInfo);\r\n        console.log(error);\r\n    })\r\n    \r\n    console.log(user.email);\r\n    e.preventDefault()\r\n   }\r\n   const updateUserInfo = name => {\r\n    const user = firebase.auth().currentUser;\r\n\r\n    user.updateProfile({\r\n    displayName: name,\r\n    }).then(function() {\r\n    console.log(\"User name Updated SuccessFully\")\r\n    }).catch(function(error) {\r\n     console.log(error)\r\n    });\r\n}\r\n    return (\r\n        <div className='background d-flex justify-content-center p-5'>\r\n\r\n            {click.login && <div className=\"loginBox\">\r\n                <div className=\"text-center\">\r\n                    <img\r\n                        src={logo}\r\n                        alt=\"\"\r\n                        style={{\r\n                            width: '30%'\r\n                        }}/>\r\n                </div>\r\n                <div className=\"loginText mt-5 text-center\">\r\n                    <h2\r\n                        style={{\r\n                            fontFamily: \"'Raleway', sans-serif\"\r\n                        }}>Log In</h2>\r\n                </div>\r\n                <p className=\"text-danger\">{user.error}</p>\r\n                {user.success && <p className='text-success'>Log in successfull</p>}\r\n                <form action=\"\" onSubmit={handleSubmitLogin}>\r\n                <div className=\"\">\r\n                    <div class=\"mb-3 row\">\r\n\r\n                        <div class=\"col-sm-10 input-box\">\r\n                            <input\r\n                                onChange={handleOnChange}\r\n                                type=\"text\"\r\n                                class=\"form-control\"\r\n                                id=\"staticEmail\"\r\n                                name=\"email\"\r\n                                placeholder=\"User email\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"mb-3 row\">\r\n                        <div class=\"col-sm-10 input-box\">\r\n                            <input\r\n                                type=\"password\"\r\n                                onChange={handleOnChange}\r\n                                class=\"form-control\"\r\n                                id=\"inputPassword\"\r\n                                name=\"ConfirmPassword\"\r\n                                placeholder=\"Password\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"remember\">\r\n                    <input className=\"rememberCheckbox\" type=\"checkbox\"/>\r\n                    <label htmlFor=\"\">Remember Me</label>\r\n                </div>\r\n                <div className=\"forgotPass\">\r\n                    <a href=\"#\" className=\"forgotTxt\">Forgot Password</a>\r\n                </div>\r\n                <div>\r\n                    <button className=\"form-control bg-primary text-light\" type='submit'>Log In</button>\r\n                </div>\r\n                <div className=\"creatTxt\">\r\n                    <p>Don't have an account?<span onClick={handleSignUp} className=\"creatAccount\">Create an account</span>\r\n                    </p>\r\n                </div>\r\n                \r\n                </form>\r\n            </div>}\r\n\r\n            {click.signUp && <div className=\"loginBox signup\">\r\n                <div className=\"text-center\">\r\n                    <img\r\n                        src={logo}\r\n                        alt=\"\"\r\n                        style={{\r\n                            width: '30%'\r\n                        }}/>\r\n                </div>\r\n                <div className=\"loginText mt-5 text-center\">\r\n                    <h2\r\n                        style={{\r\n                            fontFamily: \"'Raleway', sans-serif\"\r\n                        }}>Sign Up</h2>\r\n                </div>\r\n                <p className='text-danger'>{user.error}</p>\r\n                {user.success && <p className='text-success'>SignUp SuccessFull</p>}\r\n                <form action=\"\" onSubmit={handleCreateAccount}>\r\n                <div className=\"\">\r\n                    <div class=\"mb-3 row\">\r\n\r\n                        <div class=\"col-sm-10 input-box\">\r\n                            <input\r\n                                onChange={handleOnChange}\r\n                                type=\"text\"\r\n                                class=\"form-control\"\r\n                                id=\"staticEmail\"\r\n                                placeholder=\"First Name\"\r\n                                name=\"name\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"mb-3 row\">\r\n\r\n                        <div class=\"col-sm-10 input-box\">\r\n                            <input\r\n                            onChange={handleOnChange}\r\n                                type=\"text\"\r\n                                class=\"form-control\"\r\n                                id=\"staticEmail\"\r\n                                placeholder=\"Last Name\"\r\n                                name=\"name\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"mb-3 row\">\r\n\r\n                        <div class=\"col-sm-10 input-box\">\r\n                            <input\r\n                            onChange={handleOnChange}\r\n                                type=\"email\"\r\n                                class=\"form-control\"\r\n                                id=\"staticEmail\"\r\n                                placeholder=\"Email\"\r\n                                name=\"email\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"mb-3 row\">\r\n                        <div class=\"col-sm-10 input-box\">\r\n                            <input\r\n                            onChange={handleOnChange}\r\n                                type=\"password\"\r\n                                class=\"form-control\"\r\n                                id=\"inputPassword\"\r\n                                name=\"ConfirmPassword\"\r\n                                placeholder=\"Password\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"mb-3 row\">\r\n                        <div class=\"col-sm-10 input-box\">\r\n                            <input\r\n                            onChange={handleOnChange}\r\n                                type=\"password\"\r\n                                class=\"form-control\"\r\n                                id=\"inputPassword\"\r\n                                name=\"ConfirmPassword\"\r\n                                placeholder=\"Confirm Password\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div>\r\n                    <button className=\"form-control bg-primary text-light\" type='submit'>Log In</button>\r\n                </div>\r\n                <div className=\"creatTxt\">\r\n                    <p>Already have an account?<span onClick={handleLogin} className=\"creatAccount\">Log In</span>\r\n                    </p>\r\n                </div>\r\n                \r\n                </form>\r\n            </div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;","E:\\Shafi\\remotePackRlab\\src\\Components\\Home\\UserHome\\Rechart.js",["90","91"],"import React, { PureComponent } from 'react';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\r\n\r\nconst data = [\r\n  {\r\n    name: 'Page A',\r\n    uv: 4000,\r\n    pv: 2400,\r\n    amt: 2400,\r\n  },\r\n  {\r\n    name: 'Page B',\r\n    uv: 3000,\r\n    pv: 1398,\r\n    amt: 2210,\r\n  },\r\n  {\r\n    name: 'Page C',\r\n    uv: 2000,\r\n    pv: 9800,\r\n    amt: 2290,\r\n  },\r\n  {\r\n    name: 'Page D',\r\n    uv: 2780,\r\n    pv: 3908,\r\n    amt: 2000,\r\n  },\r\n  {\r\n    name: 'Page E',\r\n    uv: 1890,\r\n    pv: 4800,\r\n    amt: 2181,\r\n  },\r\n  {\r\n    name: 'Page F',\r\n    uv: 2390,\r\n    pv: 3800,\r\n    amt: 2500,\r\n  },\r\n  {\r\n    name: 'Page G',\r\n    uv: 3490,\r\n    pv: 4300,\r\n    amt: 2100,\r\n  },\r\n];\r\n\r\n\r\nconst Rechart = () => {\r\n    return (\r\n        <div className='mt-5'>\r\n        <LineChart width={900} height={160} data={data} >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" interval=\"preserveEnd\" />\r\n          <YAxis interval=\"preserveEnd\" />\r\n          <Legend />\r\n          <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\r\n          <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" />\r\n        </LineChart>\r\n\r\n        <LineChart width={900} height={160} data={data}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" interval=\"preserveStart\" />\r\n          <YAxis interval=\"preserveStart\" />\r\n          <Legend />\r\n          <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\r\n          <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" />\r\n        </LineChart>\r\n\r\n        <LineChart width={900} height={160} data={data}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" interval=\"preserveStartEnd\" />\r\n          <YAxis interval=\"preserveStartEnd\" />\r\n          <Legend />\r\n          <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\r\n          <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" />\r\n        </LineChart>\r\n\r\n        \r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Rechart;","E:\\Shafi\\remotePackRlab\\src\\Components\\Login\\firebase.config.js",[],"E:\\Shafi\\remotePackRlab\\src\\Components\\Home\\User\\User.js",["92","93","94"],"E:\\Shafi\\remotePackRlab\\src\\Components\\Shared\\Navbar.js",[],"E:\\Shafi\\remotePackRlab\\src\\Components\\Home\\Devices\\Devices.js",[],"E:\\Shafi\\remotePackRlab\\src\\Components\\Home\\Locations\\Locations.js",["95"],"E:\\Shafi\\remotePackRlab\\src\\Components\\Home\\User\\UserData.js",[],"E:\\Shafi\\remotePackRlab\\src\\Components\\Home\\User\\UserForm.js",[],"E:\\Shafi\\remotePackRlab\\src\\Components\\Home\\Locations\\LocationUser.js",["96"],"import React, { useEffect, useState } from 'react';\r\nimport DevicesForm from './DevicesForm';\r\nimport logo1 from '../../../Resorces/logo1.png';\r\nimport logo2 from '../../../Resorces/logo2.png';\r\nimport logo3 from '../../../Resorces/logo3.png';\r\nimport './LocationStyle.css';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\nif (!firebase.apps.length) {\r\n    firebase.initializeApp({\r\n        apiKey: \"AIzaSyD_H-N97ETri2j8yI5c-X1YtguoBCWtWAU\",\r\n        authDomain: \"rlab-1f739.firebaseapp.com\",\r\n        projectId: \"rlab-1f739\",\r\n        storageBucket: \"rlab-1f739.appspot.com\",\r\n        messagingSenderId: \"663446234969\",\r\n        appId: \"1:663446234969:web:0cf0efc959e952732c8e48\",\r\n        measurementId: \"G-2EFCRDJGTP\"\r\n    });\r\n }else {\r\n    firebase.app(); // if already initialized, use that one\r\n }\r\n\r\nconst db = firebase.firestore();\r\n\r\nconst LocationUser = () => {\r\n    const [click, setClick] = useState({\r\n        locationCLick:true,\r\n        terminal: false\r\n    })\r\n    const handleTerminal = () => {\r\n        const newClick = {...click};\r\n        newClick.locationCLick = false;\r\n        newClick.terminal = true;\r\n        setClick(newClick)\r\n    }\r\n    const [dbUserData, setDbUserData] = useState();\r\n    const [loading, setLoading] = useState(true)\r\n    \r\n    useEffect(() => {\r\n        const getDataFirebase = [];\r\n        const userDb = db.collection(\"Devices\").onSnapshot((querySnapshot) => {\r\n            querySnapshot.forEach((doc) => {\r\n              getDataFirebase.push({...doc.data(), key:doc.id});\r\n            });\r\n            setDbUserData(getDataFirebase);\r\n            setLoading(false)\r\n        });\r\n        \r\n       return userDb;\r\n    }, []);\r\n    console.log(dbUserData);\r\n\r\n    return (\r\n        <div >\r\n           {click.locationCLick && <div className='row'>\r\n           <div className=\"col-md-4 mb-3\">\r\n            <div class=\"card card-container\" style={{width: '10rem'}} onClick={handleTerminal}>\r\n                <img src={logo1} class=\"card-img-top\" alt=\"...\"/>\r\n                <div class=\"card-body\">\r\n                   <h6 className=\"card-text-h6\">Location 1</h6>\r\n                   <p className=\"card-text-p\">Motor Pump 5kV</p>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            <div className=\"col-md-4 mb-3\">\r\n            <div class=\"card card-container\" style={{width: '10rem'}} onClick={handleTerminal}>\r\n                <img src={logo3} class=\"card-img-top\" alt=\"...\"/>\r\n                <div class=\"card-body\">\r\n                   <h6 className=\"card-text-h6\">Location 2</h6>\r\n                   <p className=\"card-text-p\">Truck FLVC01</p>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            <div className=\"col-md-4 mb-3\">\r\n            <div class=\"card card-container\" style={{width: '10rem'}} onClick={handleTerminal}>\r\n                <img src={logo2} class=\"card-img-top\" alt=\"...\"/>\r\n                <div class=\"card-body\">\r\n                   <h6 className=\"card-text-h6\">Location 3</h6>\r\n                   <p className=\"card-text-p\">Dust Fun 4HP</p>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            <div className=\"col-md-4 mb-3\">\r\n            <div class=\"card card-container\" style={{width: '10rem'}} onClick={handleTerminal}>\r\n                <img src={logo3} class=\"card-img-top\" alt=\"...\"/>\r\n                <div class=\"card-body\">\r\n                   <h6 className=\"card-text-h6\">Location 4</h6>\r\n                   <p className=\"card-text-p\">Truck FLHR09</p>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            <div className=\"col-md-4 mb-3\">\r\n            <div class=\"card card-container\" style={{width: '10rem'}} onClick={handleTerminal}>\r\n                <img src={logo1} class=\"card-img-top\" alt=\"...\"/>\r\n                <div class=\"card-body\">\r\n                   <h6 className=\"card-text-h6\">Location 6</h6>\r\n                   <p className=\"card-text-p\">Motor Pump 2kV</p>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            {/* <div className=\"col-md-4 mb-3\">\r\n            <div class=\"card\" style={{width: '10rem'}} onClick={handleTerminal}>\r\n                <img src=\"https://www.clipartmax.com/png/middle/301-3017435_icon-delivery-vector-image-delivery-truck-vector-png.png\" class=\"card-img-top\" alt=\"...\"/>\r\n                <div class=\"card-body\">\r\n                   <h6>Location 6</h6>\r\n                </div>\r\n            </div>\r\n            </div> */}\r\n           </div>}\r\n            {click.terminal && <DevicesForm data={dbUserData}/>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LocationUser;","E:\\Shafi\\remotePackRlab\\src\\Components\\Home\\Locations\\DevicesForm.js",[],"E:\\Shafi\\remotePackRlab\\src\\Components\\Home\\Locations\\DeveiceMeter.js",["97"],"import React from 'react';\r\nimport './DeviceMeter.css';\r\nimport Rechart from '../UserHome/Rechart';\r\nimport {\r\n    LineChart,\r\n    Line,\r\n    XAxis,\r\n    YAxis,\r\n    CartesianGrid,\r\n    Tooltip,\r\n    Legend,\r\n    ResponsiveContainer\r\n} from 'recharts';\r\nconst data = [\r\n    {\r\n        name: 'Page A',\r\n        uv: 4000,\r\n        pv: 2400,\r\n        amt: 2400\r\n    }, {\r\n        name: 'Page B',\r\n        uv: 3000,\r\n        pv: 1398,\r\n        amt: 2210\r\n    }, {\r\n        name: 'Page C',\r\n        uv: 2000,\r\n        pv: 9800,\r\n        amt: 2290\r\n    }, {\r\n        name: 'Page D',\r\n        uv: 2780,\r\n        pv: 3908,\r\n        amt: 2000\r\n    }, {\r\n        name: 'Page E',\r\n        uv: 1890,\r\n        pv: 4800,\r\n        amt: 2181\r\n    }, {\r\n        name: 'Page F',\r\n        uv: 2390,\r\n        pv: 3800,\r\n        amt: 2500\r\n    }, {\r\n        name: 'Page G',\r\n        uv: 3490,\r\n        pv: 4300,\r\n        amt: 2100\r\n    }\r\n];\r\nconst DeveiceMeter = () => {\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>Meter</h1>\r\n            <div>\r\n                <div className=\"row \">\r\n                    <div className=\"col-md-4 meter-col\">\r\n                        <p>Date</p>\r\n                    </div>\r\n                    <div className=\"col-md-2 meter-col\">\r\n                        <p>Vcc 1</p>\r\n                    </div>\r\n                    <div className=\"col-md-2 meter-col\">\r\n                        <p>Vcc 2</p>\r\n                    </div>\r\n                    <div className=\"col-md-2 meter-col\">\r\n                        <p>Vcc 3</p>\r\n                    </div>\r\n                    <div className=\"col-md-2 meter-col\">\r\n                        <p>Current 1</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4 meter-col\">\r\n                        <p>12/12/21 08:06:15</p>\r\n                    </div>\r\n                    <div className=\"col-md-2 meter-col\">\r\n                        <p>24.6V</p>\r\n                    </div>\r\n                    <div className=\"col-md-2 meter-col\">\r\n                        <p>18.1V</p>\r\n                    </div>\r\n                    <div className=\"col-md-2 meter-col\">\r\n                        <p>24.4V</p>\r\n                    </div>\r\n                    <div className=\"col-md-2 meter-col\">\r\n                        <p>10A</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div>\r\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n        <LineChart\r\n          width={500}\r\n          height={300}\r\n          data={data}\r\n          margin={{\r\n            top: 5,\r\n            right: 30,\r\n            left: 20,\r\n            bottom: 5,\r\n          }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis yAxisId=\"left\" />\r\n          <YAxis yAxisId=\"right\" orientation=\"right\" />\r\n          <Tooltip />\r\n          <Legend />\r\n          <Line yAxisId=\"left\" type=\"monotone\" dataKey=\"pv\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\r\n          <Line yAxisId=\"right\" type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n            </div>\r\n            <div>\r\n                <p className=\"row title-control\">Control</p>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-2\">\r\n                        <p>Period :</p>\r\n                    </div>\r\n                    <div className=\"col-md-4\"><input type=\"number\"/></div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-2\">\r\n                        <p>Freq :</p>\r\n                    </div>\r\n                    <div className=\"col-md-4\"><input type=\"number\"/></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DeveiceMeter;","E:\\Shafi\\remotePackRlab\\src\\Components\\Home\\Locations\\DevicesData.js",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":7,"column":3,"nodeType":"104","messageId":"105","endLine":7,"endColumn":7},{"ruleId":"102","severity":1,"message":"106","line":6,"column":18,"nodeType":"104","messageId":"105","endLine":6,"endColumn":25},{"ruleId":"102","severity":1,"message":"106","line":31,"column":18,"nodeType":"104","messageId":"105","endLine":31,"endColumn":25},{"ruleId":"102","severity":1,"message":"107","line":34,"column":12,"nodeType":"104","messageId":"105","endLine":34,"endColumn":19},{"ruleId":"102","severity":1,"message":"103","line":10,"column":10,"nodeType":"104","messageId":"105","endLine":10,"endColumn":14},{"ruleId":"108","severity":1,"message":"109","line":166,"column":21,"nodeType":"110","endLine":166,"endColumn":55},{"ruleId":"102","severity":1,"message":"111","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":30},{"ruleId":"102","severity":1,"message":"112","line":2,"column":56,"nodeType":"104","messageId":"105","endLine":2,"endColumn":63},{"ruleId":"102","severity":1,"message":"113","line":1,"column":29,"nodeType":"104","messageId":"105","endLine":1,"endColumn":38},{"ruleId":"102","severity":1,"message":"114","line":20,"column":12,"nodeType":"104","messageId":"105","endLine":20,"endColumn":16},{"ruleId":"102","severity":1,"message":"106","line":20,"column":18,"nodeType":"104","messageId":"105","endLine":20,"endColumn":25},{"ruleId":"102","severity":1,"message":"106","line":33,"column":18,"nodeType":"104","messageId":"105","endLine":33,"endColumn":25},{"ruleId":"102","severity":1,"message":"107","line":38,"column":12,"nodeType":"104","messageId":"105","endLine":38,"endColumn":19},{"ruleId":"102","severity":1,"message":"115","line":3,"column":8,"nodeType":"104","messageId":"105","endLine":3,"endColumn":15},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'setUser' is assigned a value but never used.","'loading' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'PureComponent' is defined but never used.","'Tooltip' is defined but never used.","'useEffect' is defined but never used.","'user' is assigned a value but never used.","'Rechart' is defined but never used.","no-global-assign","no-unsafe-negation"]